{"version":3,"file":"picker.js","sources":["node_modules/svelte/internal/index.mjs","src/picker/groups.js","src/shared/constants.js","src/picker/utils/requestIdleCallback.js","src/picker/utils/hasZwj.js","bin/versionsAndTestEmoji.js","src/picker/constants.js","src/picker/utils/testColorEmojiSupported.js","src/picker/utils/determineEmojiSupportLevel.js","src/picker/utils/emojiSupport.js","src/picker/utils/applySkinTone.js","src/picker/utils/halt.js","src/picker/utils/incrementOrDecrement.js","src/shared/uniqBy.js","src/picker/utils/summarizeEmojisForUI.js","src/picker/utils/requestAnimationFrame.js","src/picker/utils/widthCalculator.js","src/picker/utils/calculateTextWidth.js","src/picker/utils/checkZwjSupport.js","src/picker/utils/requestPostAnimationFrame.js","src/shared/uniq.js","src/shared/lang.js","src/picker/utils/resetScrollTopIfPossible.js","src/picker/components/Picker/Picker.svelte","src/database/constants.js","src/picker/i18n/en.js","src/picker/PickerElement.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","// via https://unpkg.com/browse/emojibase-data@6.0.0/meta/groups.json\nconst allGroups = [\n  [-1, '✨', 'custom'],\n  [0, '😀', 'smileys-emotion'],\n  [1, '👋', 'people-body'],\n  [3, '🐱', 'animals-nature'],\n  [4, '🍎', 'food-drink'],\n  [5, '🏠️', 'travel-places'],\n  [6, '⚽', 'activities'],\n  [7, '📝', 'objects'],\n  [8, '⛔️', 'symbols'],\n  [9, '🏁', 'flags']\n].map(([id, emoji, name]) => ({ id, emoji, name }))\n\nexport const groups = allGroups.slice(1)\nexport const customGroup = allGroups[0]\n","export const MIN_SEARCH_TEXT_LENGTH = 2\nexport const NUM_SKIN_TONES = 6\n","/* istanbul ignore next */\nconst rIC = typeof requestIdleCallback === 'function' ? requestIdleCallback : setTimeout\n\nexport { rIC as requestIdleCallback }\n","// check for ZWJ (zero width joiner) character\nexport function hasZwj (emoji) {\n  return emoji.unicode.includes('\\u200d')\n}\n","// Find one good representative emoji from each version to test by checking its color.\n// Ideally it should have color in the center. For some inspiration, see:\n// https://about.gitlab.com/blog/2018/05/30/journey-in-native-unicode-emoji/\n//\n// Note that for certain versions (12.1, 13.1), there is no point in testing them explicitly, because\n// all the emoji from this version are compound-emoji from previous versions. So they would pass a color\n// test, even in browsers that display them as double emoji. (E.g. \"face in clouds\" might render as\n// \"face without mouth\" plus \"fog\".) These emoji can only be filtered using the width test,\n// which happens in checkZwjSupport.js.\nexport const versionsAndTestEmoji = {\n  '🫠': 14,\n  '🥲': 13.1, // smiling face with tear, technically from v13 but see note above\n  '🥻': 12.1, // sari, technically from v12 but see note above\n  '🥰': 11,\n  '🤩': 5,\n  '👱‍♀️': 4,\n  '🤣': 3,\n  '👁️‍🗨️': 2,\n  '😀': 1,\n  '😐️': 0.7,\n  '😃': 0.6\n}\n","export const TIMEOUT_BEFORE_LOADING_MESSAGE = 1000 // 1 second\nexport const DEFAULT_SKIN_TONE_EMOJI = '🖐️'\nexport const DEFAULT_NUM_COLUMNS = 8\n\n// Based on https://fivethirtyeight.com/features/the-100-most-used-emojis/ and\n// https://blog.emojipedia.org/facebook-reveals-most-and-least-used-emojis/ with\n// a bit of my own curation. (E.g. avoid the \"OK\" gesture because of connotations:\n// https://emojipedia.org/ok-hand/)\nexport const MOST_COMMONLY_USED_EMOJI = [\n  '😊',\n  '😒',\n  '♥️',\n  '👍️',\n  '😍',\n  '😂',\n  '😭',\n  '☺️',\n  '😔',\n  '😩',\n  '😏',\n  '💕',\n  '🙌',\n  '😘'\n]\n\n// It's important to list Twemoji Mozilla before everything else, because Mozilla bundles their\n// own font on some platforms (notably Windows and Linux as of this writing). Typically Mozilla\n// updates faster than the underlying OS, and we don't want to render older emoji in one font and\n// newer emoji in another font:\n// https://github.com/nolanlawson/emoji-picker-element/pull/268#issuecomment-1073347283\nexport const FONT_FAMILY = '\"Twemoji Mozilla\",\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",' +\n  '\"Noto Color Emoji\",\"EmojiOne Color\",\"Android Emoji\",sans-serif'\n\n/* istanbul ignore next */\nexport const DEFAULT_CATEGORY_SORTING = (a, b) => a < b ? -1 : a > b ? 1 : 0\n","// Test if an emoji is supported by rendering it to canvas and checking that the color is not black\n// See https://about.gitlab.com/blog/2018/05/30/journey-in-native-unicode-emoji/\n// and https://www.npmjs.com/package/if-emoji for inspiration\n// This implementation is largely borrowed from if-emoji, adding the font-family\n\n/* istanbul ignore file */\n\nimport { FONT_FAMILY } from '../constants'\nimport { versionsAndTestEmoji } from '../../../bin/versionsAndTestEmoji'\n\n// only used in jest tests\nlet simulateCanvasError = false\nexport function setSimulateCanvasError (value) {\n  simulateCanvasError = value\n}\nlet simulateOldBrowser = false\nexport function setSimulateOldBrowser (value) {\n  simulateOldBrowser = value\n}\n\nconst getTextFeature = (text, color) => {\n  const canvas = document.createElement('canvas')\n  canvas.width = canvas.height = 1\n\n  const ctx = canvas.getContext('2d')\n  ctx.textBaseline = 'top'\n  ctx.font = `100px ${FONT_FAMILY}`\n  ctx.fillStyle = color\n  ctx.scale(0.01, 0.01)\n  ctx.fillText(text, 0, 0)\n\n  return ctx.getImageData(0, 0, 1, 1).data\n}\n\nconst compareFeatures = (feature1, feature2) => {\n  const feature1Str = [...feature1].join(',')\n  const feature2Str = [...feature2].join(',')\n  // This is RGBA, so for 0,0,0, we are checking that the first RGB is not all zeroes.\n  // Most of the time when unsupported this is 0,0,0,0, but on Chrome on Mac it is\n  // 0,0,0,61 - there is a transparency here.\n  return feature1Str === feature2Str && !feature1Str.startsWith('0,0,0,')\n}\n\nexport function testColorEmojiSupported (text) {\n  if (process.env.NODE_ENV === 'test') {\n    if (simulateCanvasError) {\n      throw new Error('canvas error')\n    } else if (simulateOldBrowser) {\n      return Object.entries(versionsAndTestEmoji)\n        .filter(([emoji, version]) => version < 12)\n        .map(([emoji]) => emoji)\n        .includes(text)\n    }\n    return true // avoid using canvas in jest\n  }\n  // Render white and black and then compare them to each other and ensure they're the same\n  // color, and neither one is black. This shows that the emoji was rendered in color.\n  const feature1 = getTextFeature(text, '#000')\n  const feature2 = getTextFeature(text, '#fff')\n  return feature1 && feature2 && compareFeatures(feature1, feature2)\n}\n","// rather than check every emoji ever, which would be expensive, just check some representatives from the\n// different emoji releases to determine what the font supports\nimport { versionsAndTestEmoji } from '../../../bin/versionsAndTestEmoji'\nimport { testColorEmojiSupported } from './testColorEmojiSupported'\n\nexport function determineEmojiSupportLevel () {\n  performance.mark('determineEmojiSupportLevel')\n  const entries = Object.entries(versionsAndTestEmoji)\n  try {\n    // start with latest emoji and work backwards\n    for (const [emoji, version] of entries) {\n      if (testColorEmojiSupported(emoji)) {\n        return version\n      }\n    }\n  } catch (e) { // canvas error\n    console.log('Ignoring canvas error', e)\n  } finally {\n    performance.measure('determineEmojiSupportLevel', 'determineEmojiSupportLevel')\n  }\n  // In case of an error, be generous and just assume all emoji are supported (e.g. for canvas errors\n  // due to anti-fingerprinting add-ons). Better to show some gray boxes than nothing at all.\n  return entries[0][1] // first one in the list is the most recent version\n}\n","import { determineEmojiSupportLevel } from './determineEmojiSupportLevel'\nimport { requestIdleCallback } from './requestIdleCallback'\n// Check which emojis we know for sure aren't supported, based on Unicode version level\nexport const emojiSupportLevelPromise = new Promise(resolve => (\n  requestIdleCallback(() => (\n    resolve(determineEmojiSupportLevel()) // delay so ideally this can run while IDB is first populating\n  ))\n))\n// determine which emojis containing ZWJ (zero width joiner) characters\n// are supported (rendered as one glyph) rather than unsupported (rendered as two or more glyphs)\nexport const supportedZwjEmojis = new Map()\n\n/* istanbul ignore else */\nif (process.env.NODE_ENV !== 'production') {\n  emojiSupportLevelPromise.then(emojiSupportLevel => {\n    console.log('emoji support level', emojiSupportLevel)\n  })\n}\n","const VARIATION_SELECTOR = '\\ufe0f'\nconst SKINTONE_MODIFIER = '\\ud83c'\nconst ZWJ = '\\u200d'\nconst LIGHT_SKIN_TONE = 0x1F3FB\nconst LIGHT_SKIN_TONE_MODIFIER = 0xdffb\n\n// TODO: this is a naive implementation, we can improve it later\n// It's only used for the skintone picker, so as long as people don't customize with\n// really exotic emoji then it should work fine\nexport function applySkinTone (str, skinTone) {\n  if (skinTone === 0) {\n    return str\n  }\n  const zwjIndex = str.indexOf(ZWJ)\n  if (zwjIndex !== -1) {\n    return str.substring(0, zwjIndex) +\n      String.fromCodePoint(LIGHT_SKIN_TONE + skinTone - 1) +\n      str.substring(zwjIndex)\n  }\n  if (str.endsWith(VARIATION_SELECTOR)) {\n    str = str.substring(0, str.length - 1)\n  }\n  return str + SKINTONE_MODIFIER + String.fromCodePoint(LIGHT_SKIN_TONE_MODIFIER + skinTone - 1)\n}\n","export function halt (event) {\n  event.preventDefault()\n  event.stopPropagation()\n}\n","// Implementation left/right or up/down navigation, circling back when you\n// reach the start/end of the list\nexport function incrementOrDecrement (decrement, val, arr) {\n  val += (decrement ? -1 : 1)\n  if (val < 0) {\n    val = arr.length - 1\n  } else if (val >= arr.length) {\n    val = 0\n  }\n  return val\n}\n","// like lodash's uniqBy but much smaller\nexport function uniqBy (arr, func) {\n  const set = new Set()\n  const res = []\n  for (const item of arr) {\n    const key = func(item)\n    if (!set.has(key)) {\n      set.add(key)\n      res.push(item)\n    }\n  }\n  return res\n}\n","// We don't need all the data on every emoji, and there are specific things we need\n// for the UI, so build a \"view model\" from the emoji object we got from the database\n\nexport function summarizeEmojisForUI (emojis, emojiSupportLevel) {\n  const toSimpleSkinsMap = skins => {\n    const res = {}\n    for (const skin of skins) {\n      // ignore arrays like [1, 2] with multiple skin tones\n      // also ignore variants that are in an unsupported emoji version\n      // (these do exist - variants from a different version than their base emoji)\n      if (typeof skin.tone === 'number' && skin.version <= emojiSupportLevel) {\n        res[skin.tone] = skin.unicode\n      }\n    }\n    return res\n  }\n\n  return emojis.map(({ unicode, skins, shortcodes, url, name, category }) => ({\n    unicode,\n    name,\n    shortcodes,\n    url,\n    category,\n    id: unicode || name,\n    skins: skins && toSimpleSkinsMap(skins),\n    title: (shortcodes || []).join(', ')\n  }))\n}\n","// import rAF from one place so that the bundle size is a bit smaller\nconst rAF = requestAnimationFrame\n\nexport { rAF as requestAnimationFrame }\n","// Svelte action to calculate the width of an element and auto-update\n// using ResizeObserver. If ResizeObserver is unsupported, we just use rAF once\n// and don't bother to update.\n\nimport { requestAnimationFrame } from './requestAnimationFrame'\n\nexport let resizeObserverSupported = typeof ResizeObserver === 'function'\n\n// only used in jest tests\nexport const resetResizeObserverSupported = () => {\n  resizeObserverSupported = typeof ResizeObserver === 'function'\n}\n\nexport function calculateWidth (node, onUpdate) {\n  let resizeObserver\n  if (resizeObserverSupported) {\n    resizeObserver = new ResizeObserver(entries => (\n      onUpdate(entries[0].contentRect.width)\n    ))\n    resizeObserver.observe(node)\n  } else { // just set the width once, don't bother trying to track it\n    requestAnimationFrame(() => (\n      onUpdate(node.getBoundingClientRect().width)\n    ))\n  }\n\n  // cleanup function (called on destroy)\n  return {\n    destroy () {\n      if (resizeObserver) {\n        resizeObserver.disconnect()\n      }\n    }\n  }\n}\n","// get the width of the text inside of a DOM node, via https://stackoverflow.com/a/59525891/680742\nexport function calculateTextWidth (node) {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV === 'test') {\n    return 1\n  } else {\n    const range = document.createRange()\n    range.selectNode(node.firstChild)\n    return range.getBoundingClientRect().width\n  }\n}\n","import { calculateTextWidth } from './calculateTextWidth'\nimport { supportedZwjEmojis } from './emojiSupport'\n\nlet baselineEmojiWidth\n\nexport function checkZwjSupport (zwjEmojisToCheck, baselineEmoji, emojiToDomNode) {\n  performance.mark('checkZwjSupport')\n  for (const emoji of zwjEmojisToCheck) {\n    const domNode = emojiToDomNode(emoji)\n    const emojiWidth = calculateTextWidth(domNode)\n    if (typeof baselineEmojiWidth === 'undefined') { // calculate the baseline emoji width only once\n      baselineEmojiWidth = calculateTextWidth(baselineEmoji)\n    }\n    // On Windows, some supported emoji are ~50% bigger than the baseline emoji, but what we really want to guard\n    // against are the ones that are 2x the size, because those are truly broken (person with red hair = person with\n    // floating red wig, black cat = cat with black square, polar bear = bear with snowflake, etc.)\n    // So here we set the threshold at 1.8 times the size of the baseline emoji.\n    const supported = emojiWidth / 1.8 < baselineEmojiWidth\n    supportedZwjEmojis.set(emoji.unicode, supported)\n    /* istanbul ignore next */\n    if (!supported) {\n      console.log('Filtered unsupported emoji', emoji.unicode, emojiWidth, baselineEmojiWidth)\n    } else if (emojiWidth !== baselineEmojiWidth) {\n      console.log('Allowed borderline emoji', emoji.unicode, emojiWidth, baselineEmojiWidth)\n    }\n  }\n  performance.measure('checkZwjSupport', 'checkZwjSupport')\n}\n","// Measure after style/layout are complete\n// See https://github.com/andrewiggins/afterframe\n\nimport { requestAnimationFrame } from './requestAnimationFrame'\n\nexport const requestPostAnimationFrame = callback => {\n  requestAnimationFrame(() => {\n    setTimeout(callback)\n  })\n}\n","// like lodash's uniq\nimport { uniqBy } from './uniqBy'\n\nexport function uniq (arr) {\n  return uniqBy(arr, _ => _)\n}\n","// Avoid using a bunch of extra memory for throwaway read-only empty objects/arrays\nexport const EMPTY_ARRAY = []\nexport const EMPTY_OBJECT = {}\n\nif (process.env.NODE_ENV !== 'production') {\n  // In dev/test mode, we want to know if we are accidentally mutating these. Throw an error on mutation.\n  Object.freeze(EMPTY_ARRAY)\n  Object.freeze(EMPTY_OBJECT)\n}\n","// Reset scroll top to 0 when emojis change\n// Note we put this in its own function outside Picker.js to avoid Svelte doing an invalidation on the \"setter\" here.\n// At best the invalidation is useless, at worst it can cause infinite loops:\n// https://github.com/nolanlawson/emoji-picker-element/pull/180\n// https://github.com/sveltejs/svelte/issues/6521\n// Also note tabpanelElement can be null if the element is disconnected immediately after connected\nexport function resetScrollTopIfPossible (element) {\n  if (element) {\n    element.scrollTop = 0\n  }\n}\n","<svelte:options tag={null} /><section\n  class=\"picker\"\n  aria-label={i18n.regionLabel}\n  style={pickerStyle}\n  bind:this={rootElement}>\n  <!-- using a spacer div because this allows us to cover up the skintone picker animation -->\n  <div class=\"pad-top\"></div>\n  <div class=\"search-row\">\n    <div class=\"search-wrapper\">\n      <!-- no need for aria-haspopup=listbox, it's the default for role=combobox\n           https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/combobox/aria1.1pattern/listbox-combo.html\n           -->\n      <input\n        id=\"search\"\n        class=\"search\"\n        type=\"search\"\n        role=\"combobox\"\n        enterkeyhint=\"search\"\n        placeholder={i18n.searchLabel}\n        autocapitalize=\"none\"\n        autocomplete=\"off\"\n        spellcheck=\"true\"\n        aria-expanded={!!(searchMode && currentEmojis.length)}\n        aria-controls=\"search-results\"\n        aria-describedby=\"search-description\"\n        aria-autocomplete=\"list\"\n        aria-activedescendant={activeSearchItemId ? `emo-${activeSearchItemId}` : ''}\n        bind:value={rawSearchText}\n        on:keydown={onSearchKeydown}\n      >\n      <label class=\"sr-only\" for=\"search\">{i18n.searchLabel}</label>\n      <span id=\"search-description\" class=\"sr-only\">{i18n.searchDescription}</span>\n    </div>\n    <div class=\"skintone-button-wrapper {skinTonePickerExpandedAfterAnimation ? 'expanded' : ''}\">\n      <button id=\"skintone-button\"\n              class=\"emoji {skinTonePickerExpanded ? 'hide-focus' : ''}\"\n              aria-label={skinToneButtonLabel}\n              title={skinToneButtonLabel}\n              aria-describedby=\"skintone-description\"\n              aria-haspopup=\"listbox\"\n              aria-expanded={skinTonePickerExpanded}\n              aria-controls=\"skintone-list\"\n              on:click={onClickSkinToneButton}>\n        {skinToneButtonText}\n      </button>\n    </div>\n    <span id=\"skintone-description\" class=\"sr-only\">{i18n.skinToneDescription}</span>\n    <div id=\"skintone-list\"\n         class=\"skintone-list {skinTonePickerExpanded ? '' : 'hidden no-animate'}\"\n         style=\"transform:translateY({ skinTonePickerExpanded ? 0 : 'calc(-1 * var(--num-skintones) * var(--total-emoji-size))'})\"\n         role=\"listbox\"\n         aria-label={i18n.skinTonesLabel}\n         aria-activedescendant=\"skintone-{activeSkinTone}\"\n         aria-hidden={!skinTonePickerExpanded}\n         on:focusout={onSkinToneOptionsFocusOut}\n         on:click={onSkinToneOptionsClick}\n         on:keydown={onSkinToneOptionsKeydown}\n         on:keyup={onSkinToneOptionsKeyup}\n         bind:this={skinToneDropdown}>\n      {#each skinTones as skinTone, i (skinTone)}\n        <!-- would use a button here, but iOS Safari misreports relatedTarget in that case, see issue #14 -->\n        <!-- see https://stackoverflow.com/a/42764495/680742 -->\n        <!-- see also https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus -->\n        <div    id=\"skintone-{i}\"\n                class=\"emoji hide-focus {i === activeSkinTone ? 'active' : ''}\"\n                aria-selected={i === activeSkinTone}\n                role=\"option\"\n                title={i18n.skinTones[i]}\n                tabindex=\"-1\"\n                aria-label={i18n.skinTones[i]}>\n          {skinTone}\n        </div>\n      {/each}\n    </div>\n\n  </div>\n  <div class=\"nav\"\n       role=\"tablist\"\n       style=\"grid-template-columns: repeat({groups.length}, 1fr)\"\n       aria-label={i18n.categoriesLabel}\n       on:keydown={onNavKeydown}>\n    {#each groups as group (group.id)}\n      <button role=\"tab\"\n              class=\"nav-button\"\n              aria-controls=\"tab-{group.id}\"\n              aria-label={i18n.categories[group.name]}\n              aria-selected={!searchMode && currentGroup.id === group.id}\n              title={i18n.categories[group.name]}\n              on:click={() => onNavClick(group)}>\n        <div class=\"nav-emoji emoji\">\n          {group.emoji}\n        </div>\n      </button>\n    {/each}\n  </div>\n  <div class=\"indicator-wrapper\">\n    <div class=\"indicator\"\n         style=\"transform: translateX({(isRtl ? -1 : 1) * currentGroupIndex * 100}%)\">\n    </div>\n  </div>\n\n  <div class=\"message {message ? '' : 'gone'}\"\n       role=\"alert\"\n       aria-live=\"polite\">\n    {message}\n  </div>\n\n  <!-- tabindex is so people can scroll up and down with the keyboard -->\n  <div class=\"tabpanel {(!databaseLoaded || message) ? 'gone': ''}\"\n       role={searchMode ? 'region' : 'tabpanel'}\n       aria-label={searchMode ? i18n.searchResultsLabel : i18n.categories[currentGroup.name]}\n       id={searchMode ? '' : `tab-${currentGroup.id}`}\n       tabindex=\"0\"\n       on:click={onEmojiClick}\n       bind:this={tabpanelElement}\n  >\n    <div use:calculateEmojiGridStyle>\n      {#each currentEmojisWithCategories as emojiWithCategory, i (emojiWithCategory.category)}\n        <div\n          id=\"menu-label-{i}\"\n          class=\"category {currentEmojisWithCategories.length === 1 && currentEmojisWithCategories[0].category === '' ? 'gone' : ''}\"\n          aria-hidden=\"true\">\n          <!-- This logic is a bit complicated in order to avoid a flash of the word \"Custom\" while switching\n               from a tabpanel with custom emoji to a regular group. I.e. we don't want it to suddenly flash\n               from \"Custom\" to \"Smileys and emoticons\" when you click the second nav button. The easiest\n               way to repro this is to add an artificial delay to the IndexedDB operations. -->\n          {\n            searchMode ?\n              i18n.searchResultsLabel : (\n                emojiWithCategory.category ?\n                  emojiWithCategory.category : (\n                    currentEmojisWithCategories.length > 1 ?\n                      i18n.categories.custom :\n                      i18n.categories[currentGroup.name]\n                  )\n              )\n          }\n        </div>\n        <div class=\"emoji-menu\"\n             role={searchMode ? 'listbox' : 'menu'}\n             aria-labelledby=\"menu-label-{i}\"\n             id={searchMode ? 'search-results' : ''}>\n          {#each emojiWithCategory.emojis as emoji, i (emoji.id)}\n            <button role={searchMode ? 'option' : 'menuitem'}\n                    aria-selected={searchMode ? i == activeSearchItem : ''}\n                    aria-label={labelWithSkin(emoji, currentSkinTone)}\n                    title={emoji.title}\n                    class=\"emoji {searchMode && i === activeSearchItem ? 'active' : ''}\"\n                    id=\"emo-{emoji.id}\">\n              {#if emoji.unicode}\n                {unicodeWithSkin(emoji, currentSkinTone)}\n              {:else}\n                <img class=\"custom-emoji\" src={emoji.url} alt=\"\" loading=\"lazy\" />\n              {/if}\n            </button>\n          {/each}\n        </div>\n      {/each}\n    </div>\n  </div>\n  <div class=\"favorites emoji-menu {message ? 'gone': ''}\"\n       role=\"menu\"\n       aria-label={i18n.favoritesLabel}\n       style=\"padding-inline-end: {scrollbarWidth}px\"\n       on:click={onEmojiClick}>\n    <!-- The reason the emoji logic below is largely duplicated is because it turns out we get a smaller\n         bundle size from just repeating it twice, rather than creating a second Svelte component. -->\n    {#each currentFavorites as emoji, i (emoji.id)}\n      <button role=\"menuitem\"\n              aria-label={labelWithSkin(emoji, currentSkinTone)}\n              title={emoji.title}\n              class=\"emoji\"\n              id=\"fav-{emoji.id}\">\n        {#if emoji.unicode}\n          {unicodeWithSkin(emoji, currentSkinTone)}\n        {:else}\n          <img class=\"custom-emoji\" src={emoji.url} alt=\"\" loading=\"lazy\" />\n        {/if}\n      </button>\n    {/each}\n  </div>\n  <!-- This serves as a baseline emoji for measuring against and determining emoji support -->\n  <button aria-hidden=\"true\" tabindex=\"-1\" class=\"abs-pos hidden emoji\" bind:this={baselineEmoji}>😀</button>\n</section>\n<script>\n  /* eslint-disable prefer-const,no-labels,no-inner-declarations */\n\n  import { groups as defaultGroups, customGroup } from '../../groups'\n  import { MIN_SEARCH_TEXT_LENGTH, NUM_SKIN_TONES } from '../../../shared/constants'\n  import { requestIdleCallback } from '../../utils/requestIdleCallback'\n  import { hasZwj } from '../../utils/hasZwj'\n  import { emojiSupportLevelPromise, supportedZwjEmojis } from '../../utils/emojiSupport'\n  import { applySkinTone } from '../../utils/applySkinTone'\n  import { halt } from '../../utils/halt'\n  import { incrementOrDecrement } from '../../utils/incrementOrDecrement'\n  import {\n    DEFAULT_NUM_COLUMNS,\n    FONT_FAMILY,\n    MOST_COMMONLY_USED_EMOJI,\n    TIMEOUT_BEFORE_LOADING_MESSAGE\n  } from '../../constants'\n  import { uniqBy } from '../../../shared/uniqBy'\n  import { summarizeEmojisForUI } from '../../utils/summarizeEmojisForUI'\n  import * as widthCalculator from '../../utils/widthCalculator'\n  import { checkZwjSupport } from '../../utils/checkZwjSupport'\n  import { requestPostAnimationFrame } from '../../utils/requestPostAnimationFrame'\n  import { tick } from 'svelte'\n  import { requestAnimationFrame } from '../../utils/requestAnimationFrame'\n  import { uniq } from '../../../shared/uniq'\n  import { EMPTY_ARRAY } from '../../../shared/lang.js'\n  import { resetScrollTopIfPossible } from '../../utils/resetScrollTopIfPossible.js'\n\n  // public\n  export let skinToneEmoji\n  export let i18n\n  export let database\n  export let customEmoji\n  export let customCategorySorting\n\n  // private\n  let initialLoad = true\n  let currentEmojis = EMPTY_ARRAY\n  let currentEmojisWithCategories = EMPTY_ARRAY // eslint-disable-line no-unused-vars\n  let rawSearchText = ''\n  let searchText = ''\n  let rootElement\n  let baselineEmoji\n  let tabpanelElement\n  let searchMode = false // eslint-disable-line no-unused-vars\n  let activeSearchItem = -1\n  let message // eslint-disable-line no-unused-vars\n  let skinTonePickerExpanded = false\n  let skinTonePickerExpandedAfterAnimation = false // eslint-disable-line no-unused-vars\n  let skinToneDropdown\n  let currentSkinTone = 0\n  let activeSkinTone = 0\n  let skinToneButtonText // eslint-disable-line no-unused-vars\n  let pickerStyle // eslint-disable-line no-unused-vars\n  let skinToneButtonLabel = '' // eslint-disable-line no-unused-vars\n  let skinTones = EMPTY_ARRAY\n  let currentFavorites = EMPTY_ARRAY // eslint-disable-line no-unused-vars\n  let defaultFavoriteEmojis\n  let numColumns = DEFAULT_NUM_COLUMNS\n  let isRtl = false\n  let scrollbarWidth = 0 // eslint-disable-line no-unused-vars\n  let currentGroupIndex = 0\n  let groups = defaultGroups\n  let currentGroup\n  let databaseLoaded = false // eslint-disable-line no-unused-vars\n  let activeSearchItemId // eslint-disable-line no-unused-vars\n\n  //\n  // Utils/helpers\n  //\n\n  const focus = id => {\n    rootElement.getRootNode().getElementById(id).focus()\n  }\n\n  // fire a custom event that crosses the shadow boundary\n  const fireEvent = (name, detail) => {\n    rootElement.dispatchEvent(new CustomEvent(name, {\n      detail,\n      bubbles: true,\n      composed: true\n    }))\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  const unicodeWithSkin = (emoji, currentSkinTone) => (\n    (currentSkinTone && emoji.skins && emoji.skins[currentSkinTone]) || emoji.unicode\n  )\n\n  // eslint-disable-next-line no-unused-vars\n  const labelWithSkin = (emoji, currentSkinTone) => {\n    console.log('labelWithSkin')\n    return uniq([(emoji.name || unicodeWithSkin(emoji, currentSkinTone)), ...(emoji.shortcodes || EMPTY_ARRAY)]).join(', ')\n  }\n\n  // Detect a skintone option button\n  const isSkinToneOption = element => /^skintone-/.test(element.id)\n\n  //\n  // Determine the emoji support level (in requestIdleCallback)\n  //\n\n  emojiSupportLevelPromise.then(level => {\n    // Can't actually test emoji support in Jest/JSDom, emoji never render in color in Cairo\n    /* istanbul ignore next */\n    if (!level) {\n      message = i18n.emojiUnsupportedMessage\n    }\n  })\n\n  //\n  // Set or update the database object\n  //\n\n  $: {\n    // show a Loading message if it takes a long time, or show an error if there's a network/IDB error\n    async function handleDatabaseLoading () {\n      let showingLoadingMessage = false\n      const timeoutHandle = setTimeout(() => {\n        showingLoadingMessage = true\n        message = i18n.loadingMessage\n      }, TIMEOUT_BEFORE_LOADING_MESSAGE)\n      try {\n        await database.ready()\n        databaseLoaded = true // eslint-disable-line no-unused-vars\n      } catch (err) {\n        console.error(err)\n        message = i18n.networkErrorMessage\n      } finally {\n        clearTimeout(timeoutHandle)\n        if (showingLoadingMessage) { // Seems safer than checking the i18n string, which may change\n          showingLoadingMessage = false\n          message = '' // eslint-disable-line no-unused-vars\n        }\n      }\n    }\n    if (database) {\n      /* no await */ handleDatabaseLoading()\n    }\n  }\n\n  //\n  // Global styles for the entire picker\n  //\n\n  /* eslint-disable no-unused-vars */\n  $: pickerStyle = `\n  --font-family: ${FONT_FAMILY};\n  --num-groups: ${groups.length};\n  --indicator-opacity: ${searchMode ? 0 : 1};\n  --num-skintones: ${NUM_SKIN_TONES};`\n  /* eslint-enable no-unused-vars */\n\n  //\n  // Set or update the customEmoji\n  //\n\n  $: {\n    if (customEmoji && database) {\n      console.log('updating custom emoji')\n      database.customEmoji = customEmoji\n    }\n  }\n\n  $: {\n    if (customEmoji && customEmoji.length) {\n      groups = [customGroup, ...defaultGroups]\n    } else if (groups !== defaultGroups) {\n      if (currentGroupIndex) {\n        // If the current group is anything other than \"custom\" (which is first), decrement.\n        // This fixes the odd case where you set customEmoji, then pick a category, then unset customEmoji\n        currentGroupIndex--\n      }\n      groups = defaultGroups\n    }\n  }\n\n  //\n  // Set or update the preferred skin tone\n  //\n\n  $: {\n    async function updatePreferredSkinTone () {\n      if (databaseLoaded) {\n        currentSkinTone = await database.getPreferredSkinTone()\n      }\n    }\n    /* no await */ updatePreferredSkinTone()\n  }\n\n  $: skinTones = Array(NUM_SKIN_TONES).fill().map((_, i) => applySkinTone(skinToneEmoji, i))\n  /* eslint-disable no-unused-vars */\n  $: skinToneButtonText = skinTones[currentSkinTone]\n  $: skinToneButtonLabel = i18n.skinToneLabel.replace('{skinTone}', i18n.skinTones[currentSkinTone])\n  /* eslint-enable no-unused-vars */\n\n  //\n  // Set or update the favorites emojis\n  //\n\n  $: {\n    async function updateDefaultFavoriteEmojis () {\n      defaultFavoriteEmojis = (await Promise.all(MOST_COMMONLY_USED_EMOJI.map(unicode => (\n        database.getEmojiByUnicodeOrName(unicode)\n      )))).filter(Boolean) // filter because in Jest tests we don't have all the emoji in the DB\n    }\n    if (databaseLoaded) {\n      /* no await */ updateDefaultFavoriteEmojis()\n    }\n  }\n\n  $: {\n    async function updateFavorites () {\n      console.log('updateFavorites')\n      const dbFavorites = await database.getTopFavoriteEmoji(numColumns)\n      const favorites = await summarizeEmojis(uniqBy([\n        ...dbFavorites,\n        ...defaultFavoriteEmojis\n      ], _ => (_.unicode || _.name)).slice(0, numColumns))\n      currentFavorites = favorites\n    }\n\n    if (databaseLoaded && defaultFavoriteEmojis) {\n      /* no await */ updateFavorites()\n    }\n  }\n\n  //\n  // Calculate the width of the emoji grid. This serves two purposes:\n  // 1) Re-calculate the --num-columns var because it may have changed\n  // 2) Re-calculate the scrollbar width because it may have changed\n  //   (i.e. because the number of items changed)\n  // 3) Re-calculate whether we're in RTL mode or not.\n  //\n  // The benefit of doing this in one place is to align with rAF/ResizeObserver\n  // and do all the calculations in one go. RTL vs LTR is not strictly width-related,\n  // but since we're already reading the style here, and since it's already aligned with\n  // the rAF loop, this is the most appropriate place to do it perf-wise.\n  //\n\n  // eslint-disable-next-line no-unused-vars\n  function calculateEmojiGridStyle (node) {\n    return widthCalculator.calculateWidth(node, width => {\n      /* istanbul ignore next */\n      if (process.env.NODE_ENV !== 'test') { // jsdom throws errors for this kind of fancy stuff\n        // read all the style/layout calculations we need to make\n        const style = getComputedStyle(rootElement)\n        const newNumColumns = parseInt(style.getPropertyValue('--num-columns'), 10)\n        const newIsRtl = style.getPropertyValue('direction') === 'rtl'\n        const parentWidth = node.parentElement.getBoundingClientRect().width\n        const newScrollbarWidth = parentWidth - width\n\n        // write to Svelte variables\n        numColumns = newNumColumns\n        scrollbarWidth = newScrollbarWidth // eslint-disable-line no-unused-vars\n        isRtl = newIsRtl // eslint-disable-line no-unused-vars\n      }\n    })\n  }\n\n  //\n  // Update the current group based on the currentGroupIndex\n  //\n\n  $: currentGroup = groups[currentGroupIndex]\n\n  //\n  // Set or update the currentEmojis. Check for invalid ZWJ renderings\n  // (i.e. double emoji).\n  //\n\n  $: {\n    async function updateEmojis () {\n      console.log('updateEmojis')\n      if (!databaseLoaded) {\n        currentEmojis = EMPTY_ARRAY\n        searchMode = false\n      } else if (searchText.length >= MIN_SEARCH_TEXT_LENGTH) {\n        const currentSearchText = searchText\n        const newEmojis = await getEmojisBySearchQuery(currentSearchText)\n        if (currentSearchText === searchText) { // if the situation changes asynchronously, do not update\n          currentEmojis = newEmojis\n          searchMode = true\n        }\n      } else if (currentGroup) {\n        const currentGroupId = currentGroup.id\n        const newEmojis = await getEmojisByGroup(currentGroupId)\n        if (currentGroupId === currentGroup.id) { // if the situation changes asynchronously, do not update\n          currentEmojis = newEmojis\n          searchMode = false\n        }\n      }\n    }\n    /* no await */ updateEmojis()\n  }\n\n  // Some emojis have their ligatures rendered as two or more consecutive emojis\n  // We want to treat these the same as unsupported emojis, so we compare their\n  // widths against the baseline widths and remove them as necessary\n  $: {\n    const zwjEmojisToCheck = currentEmojis\n      .filter(emoji => emoji.unicode) // filter custom emoji\n      .filter(emoji => hasZwj(emoji) && !supportedZwjEmojis.has(emoji.unicode))\n    if (zwjEmojisToCheck.length) {\n      // render now, check their length later\n      requestAnimationFrame(() => checkZwjSupportAndUpdate(zwjEmojisToCheck))\n    } else {\n      currentEmojis = currentEmojis.filter(isZwjSupported)\n      requestAnimationFrame(() => resetScrollTopIfPossible(tabpanelElement))\n    }\n  }\n\n  function checkZwjSupportAndUpdate (zwjEmojisToCheck) {\n    const rootNode = rootElement.getRootNode()\n    const emojiToDomNode = emoji => rootNode.getElementById(`emo-${emoji.id}`)\n    checkZwjSupport(zwjEmojisToCheck, baselineEmoji, emojiToDomNode)\n    // force update\n    currentEmojis = currentEmojis // eslint-disable-line no-self-assign\n  }\n\n  function isZwjSupported (emoji) {\n    return !emoji.unicode || !hasZwj(emoji) || supportedZwjEmojis.get(emoji.unicode)\n  }\n\n  async function filterEmojisByVersion (emojis) {\n    const emojiSupportLevel = await emojiSupportLevelPromise\n    // !version corresponds to custom emoji\n    return emojis.filter(({ version }) => !version || version <= emojiSupportLevel)\n  }\n\n  async function summarizeEmojis (emojis) {\n    return summarizeEmojisForUI(emojis, await emojiSupportLevelPromise)\n  }\n\n  async function getEmojisByGroup (group) {\n    console.log('getEmojiByGroup', group)\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && typeof group === 'undefined') {\n      throw new Error('group is undefined', group)\n    }\n    // -1 is custom emoji\n    const emoji = group === -1 ? customEmoji : await database.getEmojiByGroup(group)\n    return summarizeEmojis(await filterEmojisByVersion(emoji))\n  }\n\n  async function getEmojisBySearchQuery (query) {\n    return summarizeEmojis(await filterEmojisByVersion(await database.getEmojiBySearchQuery(query)))\n  }\n\n  $: {\n    // consider initialLoad to be complete when the first tabpanel and favorites are rendered\n    /* istanbul ignore next */\n    if (process.env.NODE_ENV !== 'production' || process.env.PERF) {\n      if (currentEmojis.length && currentFavorites.length && initialLoad) {\n        initialLoad = false\n        requestPostAnimationFrame(() => performance.measure('initialLoad', 'initialLoad'))\n      }\n    }\n  }\n\n  //\n  // Derive currentEmojisWithCategories from currentEmojis. This is always done even if there\n  // are no categories, because it's just easier to code the HTML this way.\n  //\n\n  $: {\n    function calculateCurrentEmojisWithCategories () {\n      if (searchMode) {\n        return [\n          {\n            category: '',\n            emojis: currentEmojis\n          }\n        ]\n      }\n      const categoriesToEmoji = new Map()\n      for (const emoji of currentEmojis) {\n        const category = emoji.category || ''\n        let emojis = categoriesToEmoji.get(category)\n        if (!emojis) {\n          emojis = []\n          categoriesToEmoji.set(category, emojis)\n        }\n        emojis.push(emoji)\n      }\n      return [...categoriesToEmoji.entries()]\n        .map(([category, emojis]) => ({ category, emojis }))\n        .sort((a, b) => customCategorySorting(a.category, b.category))\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    currentEmojisWithCategories = calculateCurrentEmojisWithCategories()\n  }\n\n  //\n  // Handle active search item (i.e. pressing up or down while searching)\n  //\n\n  /* eslint-disable no-unused-vars */\n  $: activeSearchItemId = activeSearchItem !== -1 && currentEmojis[activeSearchItem].id\n  /* eslint-enable no-unused-vars */\n\n  //\n  // Handle user input on the search input\n  //\n\n  $: {\n    requestIdleCallback(() => {\n      searchText = (rawSearchText || '').trim() // defer to avoid input delays, plus we can trim here\n      activeSearchItem = -1\n    })\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  function onSearchKeydown (event) {\n    if (!searchMode || !currentEmojis.length) {\n      return\n    }\n\n    const goToNextOrPrevious = (previous) => {\n      halt(event)\n      activeSearchItem = incrementOrDecrement(previous, activeSearchItem, currentEmojis)\n    }\n\n    switch (event.key) {\n      case 'ArrowDown':\n        return goToNextOrPrevious(false)\n      case 'ArrowUp':\n        return goToNextOrPrevious(true)\n      case 'Enter':\n        if (activeSearchItem !== -1) {\n          halt(event)\n          return clickEmoji(currentEmojis[activeSearchItem].id)\n        } else if (currentEmojis.length) {\n          activeSearchItem = 0\n        }\n    }\n  }\n\n  //\n  // Handle user input on nav\n  //\n\n  // eslint-disable-next-line no-unused-vars\n  function onNavClick (group) {\n    rawSearchText = ''\n    searchText = ''\n    activeSearchItem = -1\n    currentGroupIndex = groups.findIndex(_ => _.id === group.id)\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  function onNavKeydown (event) {\n    const { target, key } = event\n\n    const doFocus = el => {\n      if (el) {\n        halt(event)\n        el.focus()\n      }\n    }\n\n    switch (key) {\n      case 'ArrowLeft':\n        return doFocus(target.previousSibling)\n      case 'ArrowRight':\n        return doFocus(target.nextSibling)\n      case 'Home':\n        return doFocus(target.parentElement.firstChild)\n      case 'End':\n        return doFocus(target.parentElement.lastChild)\n    }\n  }\n\n  //\n  // Handle user input on an emoji\n  //\n\n  async function clickEmoji (unicodeOrName) {\n    const emoji = await database.getEmojiByUnicodeOrName(unicodeOrName)\n    const emojiSummary = [...currentEmojis, ...currentFavorites]\n      .find(_ => (_.id === unicodeOrName))\n    const skinTonedUnicode = emojiSummary.unicode && unicodeWithSkin(emojiSummary, currentSkinTone)\n    await database.incrementFavoriteEmojiCount(unicodeOrName)\n    fireEvent('emoji-click', {\n      emoji,\n      skinTone: currentSkinTone,\n      ...(skinTonedUnicode && { unicode: skinTonedUnicode }),\n      ...(emojiSummary.name && { name: emojiSummary.name })\n    })\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  async function onEmojiClick (event) {\n    const { target } = event\n    if (!target.classList.contains('emoji')) {\n      return\n    }\n    halt(event)\n    const id = target.id.substring(4) // replace 'emo-' or 'fav-' prefix\n\n    /* no await */ clickEmoji(id)\n  }\n\n  //\n  // Handle user input on the skintone picker\n  //\n\n  // eslint-disable-next-line no-unused-vars\n  async function onSkinToneOptionsClick (event) {\n    const { target } = event\n    if (!isSkinToneOption(target)) {\n      return\n    }\n    halt(event)\n    const skinTone = parseInt(target.id.slice(9), 10) // remove 'skintone-' prefix\n    currentSkinTone = skinTone\n    skinTonePickerExpanded = false\n    focus('skintone-button')\n    fireEvent('skin-tone-change', { skinTone })\n    /* no await */ database.setPreferredSkinTone(skinTone)\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  async function onClickSkinToneButton (event) {\n    skinTonePickerExpanded = !skinTonePickerExpanded\n    activeSkinTone = currentSkinTone\n    if (skinTonePickerExpanded) {\n      halt(event)\n      requestAnimationFrame(() => focus(`skintone-${activeSkinTone}`))\n    }\n  }\n\n  // To make the animation nicer, change the z-index of the skintone picker button\n  // *after* the animation has played. This makes it appear that the picker box\n  // is expanding \"below\" the button\n  $: {\n    if (skinTonePickerExpanded) {\n      skinToneDropdown.addEventListener('transitionend', () => {\n        skinTonePickerExpandedAfterAnimation = true // eslint-disable-line no-unused-vars\n      }, { once: true })\n    } else {\n      skinTonePickerExpandedAfterAnimation = false // eslint-disable-line no-unused-vars\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  function onSkinToneOptionsKeydown (event) {\n    if (!skinTonePickerExpanded) {\n      return\n    }\n\n    const changeActiveSkinTone = async nextSkinTone => {\n      halt(event)\n      activeSkinTone = nextSkinTone\n      await tick()\n      focus(`skintone-${activeSkinTone}`)\n    }\n\n    switch (event.key) {\n      case 'ArrowUp':\n        return changeActiveSkinTone(incrementOrDecrement(true, activeSkinTone, skinTones))\n      case 'ArrowDown':\n        return changeActiveSkinTone(incrementOrDecrement(false, activeSkinTone, skinTones))\n      case 'Home':\n        return changeActiveSkinTone(0)\n      case 'End':\n        return changeActiveSkinTone(skinTones.length - 1)\n      case 'Enter':\n        // enter on keydown, space on keyup. this is just how browsers work for buttons\n        // https://lists.w3.org/Archives/Public/w3c-wai-ig/2019JanMar/0086.html\n        return onSkinToneOptionsClick(event)\n      case 'Escape':\n        halt(event)\n        skinTonePickerExpanded = false\n        return focus('skintone-button')\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  function onSkinToneOptionsKeyup (event) {\n    if (!skinTonePickerExpanded) {\n      return\n    }\n    switch (event.key) {\n      case ' ':\n        // enter on keydown, space on keyup. this is just how browsers work for buttons\n        // https://lists.w3.org/Archives/Public/w3c-wai-ig/2019JanMar/0086.html\n        return onSkinToneOptionsClick(event)\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  async function onSkinToneOptionsFocusOut (event) {\n    // On blur outside of the skintone options, collapse the skintone picker.\n    // Except if focus is just moving to another skintone option, e.g. pressing up/down to change focus\n    const { relatedTarget } = event\n    if (!relatedTarget || !isSkinToneOption(relatedTarget)) {\n      skinTonePickerExpanded = false\n    }\n  }\n\n</script>","export const DB_VERSION_CURRENT = 1\nexport const DB_VERSION_INITIAL = 1\nexport const STORE_EMOJI = 'emoji'\nexport const STORE_KEYVALUE = 'keyvalue'\nexport const STORE_FAVORITES = 'favorites'\nexport const FIELD_TOKENS = 'tokens'\nexport const INDEX_TOKENS = 'tokens'\nexport const FIELD_UNICODE = 'unicode'\nexport const INDEX_COUNT = 'count'\nexport const FIELD_GROUP = 'group'\nexport const FIELD_ORDER = 'order'\nexport const INDEX_GROUP_AND_ORDER = 'group-order'\nexport const KEY_ETAG = 'eTag'\nexport const KEY_URL = 'url'\nexport const KEY_PREFERRED_SKINTONE = 'skinTone'\nexport const MODE_READONLY = 'readonly'\nexport const MODE_READWRITE = 'readwrite'\nexport const INDEX_SKIN_UNICODE = 'skinUnicodes'\nexport const FIELD_SKIN_UNICODE = 'skinUnicodes'\n\nexport const DEFAULT_DATA_SOURCE = 'https://cdn.jsdelivr.net/npm/emoji-picker-element-data@^1/en/emojibase/data.json'\nexport const DEFAULT_LOCALE = 'en'\n","export default {\n  categoriesLabel: 'Categories',\n  emojiUnsupportedMessage: 'Your browser does not support color emoji.',\n  favoritesLabel: 'Favorites',\n  loadingMessage: 'Loading…',\n  networkErrorMessage: 'Could not load emoji.',\n  regionLabel: 'Emoji picker',\n  searchDescription: 'When search results are available, press up or down to select and enter to choose.',\n  searchLabel: 'Search',\n  searchResultsLabel: 'Search results',\n  skinToneDescription: 'When expanded, press up or down to select and enter to choose.',\n  skinToneLabel: 'Choose a skin tone (currently {skinTone})',\n  skinTonesLabel: 'Skin tones',\n  skinTones: [\n    'Default',\n    'Light',\n    'Medium-Light',\n    'Medium',\n    'Medium-Dark',\n    'Dark'\n  ],\n  categories: {\n    custom: 'Custom',\n    'smileys-emotion': 'Smileys and emoticons',\n    'people-body': 'People and body',\n    'animals-nature': 'Animals and nature',\n    'food-drink': 'Food and drink',\n    'travel-places': 'Travel and places',\n    activities: 'Activities',\n    objects: 'Objects',\n    symbols: 'Symbols',\n    flags: 'Flags'\n  }\n}\n","import SveltePicker from './components/Picker/Picker.svelte'\nimport { DEFAULT_DATA_SOURCE, DEFAULT_LOCALE } from '../database/constants'\nimport { DEFAULT_CATEGORY_SORTING, DEFAULT_SKIN_TONE_EMOJI } from './constants'\nimport enI18n from './i18n/en.js'\nimport Database from './ImportedDatabase'\n\nconst PROPS = [\n  'customEmoji',\n  'customCategorySorting',\n  'database',\n  'dataSource',\n  'i18n',\n  'locale',\n  'skinToneEmoji'\n]\n\nexport default class PickerElement extends HTMLElement {\n  constructor (props) {\n    performance.mark('initialLoad')\n    super()\n    this.attachShadow({ mode: 'open' })\n    const style = document.createElement('style')\n    style.textContent = process.env.STYLES\n    this.shadowRoot.appendChild(style)\n    this._ctx = {\n      // Set defaults\n      locale: DEFAULT_LOCALE,\n      dataSource: DEFAULT_DATA_SOURCE,\n      skinToneEmoji: DEFAULT_SKIN_TONE_EMOJI,\n      customCategorySorting: DEFAULT_CATEGORY_SORTING,\n      customEmoji: null,\n      i18n: enI18n,\n      ...props\n    }\n    // Handle properties set before the element was upgraded\n    for (const prop of PROPS) {\n      if (prop !== 'database' && Object.prototype.hasOwnProperty.call(this, prop)) {\n        this._ctx[prop] = this[prop]\n        delete this[prop]\n      }\n    }\n    this._dbFlush() // wait for a flush before creating the db, in case the user calls e.g. a setter or setAttribute\n  }\n\n  connectedCallback () {\n    this._cmp = new SveltePicker({\n      target: this.shadowRoot,\n      props: this._ctx\n    })\n  }\n\n  disconnectedCallback () {\n    this._cmp.$destroy()\n    this._cmp = undefined\n\n    const { database } = this._ctx\n    if (database) {\n      database.close()\n        // only happens if the database failed to load in the first place, so we don't care)\n        .catch(err => console.error(err))\n    }\n  }\n\n  static get observedAttributes () {\n    return ['locale', 'data-source', 'skin-tone-emoji'] // complex objects aren't supported, also use kebab-case\n  }\n\n  attributeChangedCallback (attrName, oldValue, newValue) {\n    // convert from kebab-case to camelcase\n    // see https://github.com/sveltejs/svelte/issues/3852#issuecomment-665037015\n    this._set(\n      attrName.replace(/-([a-z])/g, (_, up) => up.toUpperCase()),\n      newValue\n    )\n  }\n\n  _set (prop, newValue) {\n    this._ctx[prop] = newValue\n    if (this._cmp) {\n      this._cmp.$set({ [prop]: newValue })\n    }\n    if (['locale', 'dataSource'].includes(prop)) {\n      this._dbFlush()\n    }\n  }\n\n  _dbCreate () {\n    const { locale, dataSource, database } = this._ctx\n    // only create a new database if we really need to\n    if (!database || database.locale !== locale || database.dataSource !== dataSource) {\n      this._set('database', new Database({ locale, dataSource }))\n    }\n  }\n\n  // Update the Database in one microtask if the locale/dataSource change. We do one microtask\n  // so we don't create two Databases if e.g. both the locale and the dataSource change\n  _dbFlush () {\n    Promise.resolve().then(() => (\n      this._dbCreate()\n    ))\n  }\n}\n\nconst definitions = {}\n\nfor (const prop of PROPS) {\n  definitions[prop] = {\n    get () {\n      if (prop === 'database') {\n        // in rare cases, the microtask may not be flushed yet, so we need to instantiate the DB\n        // now if the user is asking for it\n        this._dbCreate()\n      }\n      return this._ctx[prop]\n    },\n    set (val) {\n      if (prop === 'database') {\n        throw new Error('database is read-only')\n      }\n      this._set(prop, val)\n    }\n  }\n}\n\nObject.defineProperties(PickerElement.prototype, definitions)\n\n/* istanbul ignore else */\nif (!customElements.get('emoji-picker')) { // if already defined, do nothing (e.g. same script imported twice)\n  customElements.define('emoji-picker', PickerElement)\n}\n"],"names":["requestIdleCallback","requestAnimationFrame","groups","defaultGroups","widthCalculator.calculateWidth","SveltePicker"],"mappings":"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"}