{"version":3,"file":"svelte.js","sources":["src/picker/groups.js","src/shared/constants.js","src/picker/utils/requestIdleCallback.js","src/picker/utils/hasZwj.js","bin/versionsAndTestEmoji.js","src/picker/constants.js","src/picker/utils/testColorEmojiSupported.js","src/picker/utils/determineEmojiSupportLevel.js","src/picker/utils/emojiSupport.js","src/picker/utils/applySkinTone.js","src/picker/utils/halt.js","src/picker/utils/incrementOrDecrement.js","src/shared/uniqBy.js","src/picker/utils/summarizeEmojisForUI.js","src/picker/utils/requestAnimationFrame.js","src/picker/utils/widthCalculator.js","src/picker/utils/calculateTextWidth.js","src/picker/utils/checkZwjSupport.js","src/picker/utils/requestPostAnimationFrame.js","src/shared/uniq.js","src/shared/lang.js","src/picker/utils/resetScrollTopIfPossible.js","src/picker/components/Picker/Picker.svelte","src/database/constants.js","src/picker/i18n/en.js","src/picker/PickerElement.js"],"sourcesContent":["// via https://unpkg.com/browse/emojibase-data@6.0.0/meta/groups.json\nconst allGroups = [\n  [-1, '✨', 'custom'],\n  [0, '😀', 'smileys-emotion'],\n  [1, '👋', 'people-body'],\n  [3, '🐱', 'animals-nature'],\n  [4, '🍎', 'food-drink'],\n  [5, '🏠️', 'travel-places'],\n  [6, '⚽', 'activities'],\n  [7, '📝', 'objects'],\n  [8, '⛔️', 'symbols'],\n  [9, '🏁', 'flags']\n].map(([id, emoji, name]) => ({ id, emoji, name }))\n\nexport const groups = allGroups.slice(1)\nexport const customGroup = allGroups[0]\n","export const MIN_SEARCH_TEXT_LENGTH = 2\nexport const NUM_SKIN_TONES = 6\n","/* istanbul ignore next */\nconst rIC = typeof requestIdleCallback === 'function' ? requestIdleCallback : setTimeout\n\nexport { rIC as requestIdleCallback }\n","// check for ZWJ (zero width joiner) character\nexport function hasZwj (emoji) {\n  return emoji.unicode.includes('\\u200d')\n}\n","// Find one good representative emoji from each version to test by checking its color.\n// Ideally it should have color in the center. For some inspiration, see:\n// https://about.gitlab.com/blog/2018/05/30/journey-in-native-unicode-emoji/\n//\n// Note that for certain versions (12.1, 13.1), there is no point in testing them explicitly, because\n// all the emoji from this version are compound-emoji from previous versions. So they would pass a color\n// test, even in browsers that display them as double emoji. (E.g. \"face in clouds\" might render as\n// \"face without mouth\" plus \"fog\".) These emoji can only be filtered using the width test,\n// which happens in checkZwjSupport.js.\nexport const versionsAndTestEmoji = {\n  '🫠': 14,\n  '🥲': 13.1, // smiling face with tear, technically from v13 but see note above\n  '🥻': 12.1, // sari, technically from v12 but see note above\n  '🥰': 11,\n  '🤩': 5,\n  '👱‍♀️': 4,\n  '🤣': 3,\n  '👁️‍🗨️': 2,\n  '😀': 1,\n  '😐️': 0.7,\n  '😃': 0.6\n}\n","export const TIMEOUT_BEFORE_LOADING_MESSAGE = 1000 // 1 second\nexport const DEFAULT_SKIN_TONE_EMOJI = '🖐️'\nexport const DEFAULT_NUM_COLUMNS = 8\n\n// Based on https://fivethirtyeight.com/features/the-100-most-used-emojis/ and\n// https://blog.emojipedia.org/facebook-reveals-most-and-least-used-emojis/ with\n// a bit of my own curation. (E.g. avoid the \"OK\" gesture because of connotations:\n// https://emojipedia.org/ok-hand/)\nexport const MOST_COMMONLY_USED_EMOJI = [\n  '😊',\n  '😒',\n  '♥️',\n  '👍️',\n  '😍',\n  '😂',\n  '😭',\n  '☺️',\n  '😔',\n  '😩',\n  '😏',\n  '💕',\n  '🙌',\n  '😘'\n]\n\n// It's important to list Twemoji Mozilla before everything else, because Mozilla bundles their\n// own font on some platforms (notably Windows and Linux as of this writing). Typically Mozilla\n// updates faster than the underlying OS, and we don't want to render older emoji in one font and\n// newer emoji in another font:\n// https://github.com/nolanlawson/emoji-picker-element/pull/268#issuecomment-1073347283\nexport const FONT_FAMILY = '\"Twemoji Mozilla\",\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",' +\n  '\"Noto Color Emoji\",\"EmojiOne Color\",\"Android Emoji\",sans-serif'\n\n/* istanbul ignore next */\nexport const DEFAULT_CATEGORY_SORTING = (a, b) => a < b ? -1 : a > b ? 1 : 0\n","// Test if an emoji is supported by rendering it to canvas and checking that the color is not black\n// See https://about.gitlab.com/blog/2018/05/30/journey-in-native-unicode-emoji/\n// and https://www.npmjs.com/package/if-emoji for inspiration\n// This implementation is largely borrowed from if-emoji, adding the font-family\n\n/* istanbul ignore file */\n\nimport { FONT_FAMILY } from '../constants'\nimport { versionsAndTestEmoji } from '../../../bin/versionsAndTestEmoji'\n\n// only used in jest tests\nlet simulateCanvasError = false\nexport function setSimulateCanvasError (value) {\n  simulateCanvasError = value\n}\nlet simulateOldBrowser = false\nexport function setSimulateOldBrowser (value) {\n  simulateOldBrowser = value\n}\n\nconst getTextFeature = (text, color) => {\n  const canvas = document.createElement('canvas')\n  canvas.width = canvas.height = 1\n\n  const ctx = canvas.getContext('2d')\n  ctx.textBaseline = 'top'\n  ctx.font = `100px ${FONT_FAMILY}`\n  ctx.fillStyle = color\n  ctx.scale(0.01, 0.01)\n  ctx.fillText(text, 0, 0)\n\n  return ctx.getImageData(0, 0, 1, 1).data\n}\n\nconst compareFeatures = (feature1, feature2) => {\n  const feature1Str = [...feature1].join(',')\n  const feature2Str = [...feature2].join(',')\n  // This is RGBA, so for 0,0,0, we are checking that the first RGB is not all zeroes.\n  // Most of the time when unsupported this is 0,0,0,0, but on Chrome on Mac it is\n  // 0,0,0,61 - there is a transparency here.\n  return feature1Str === feature2Str && !feature1Str.startsWith('0,0,0,')\n}\n\nexport function testColorEmojiSupported (text) {\n  if (process.env.NODE_ENV === 'test') {\n    if (simulateCanvasError) {\n      throw new Error('canvas error')\n    } else if (simulateOldBrowser) {\n      return Object.entries(versionsAndTestEmoji)\n        .filter(([emoji, version]) => version < 12)\n        .map(([emoji]) => emoji)\n        .includes(text)\n    }\n    return true // avoid using canvas in jest\n  }\n  // Render white and black and then compare them to each other and ensure they're the same\n  // color, and neither one is black. This shows that the emoji was rendered in color.\n  const feature1 = getTextFeature(text, '#000')\n  const feature2 = getTextFeature(text, '#fff')\n  return feature1 && feature2 && compareFeatures(feature1, feature2)\n}\n","// rather than check every emoji ever, which would be expensive, just check some representatives from the\n// different emoji releases to determine what the font supports\nimport { versionsAndTestEmoji } from '../../../bin/versionsAndTestEmoji'\nimport { testColorEmojiSupported } from './testColorEmojiSupported'\n\nexport function determineEmojiSupportLevel () {\n  performance.mark('determineEmojiSupportLevel')\n  const entries = Object.entries(versionsAndTestEmoji)\n  try {\n    // start with latest emoji and work backwards\n    for (const [emoji, version] of entries) {\n      if (testColorEmojiSupported(emoji)) {\n        return version\n      }\n    }\n  } catch (e) { // canvas error\n    console.log('Ignoring canvas error', e)\n  } finally {\n    performance.measure('determineEmojiSupportLevel', 'determineEmojiSupportLevel')\n  }\n  // In case of an error, be generous and just assume all emoji are supported (e.g. for canvas errors\n  // due to anti-fingerprinting add-ons). Better to show some gray boxes than nothing at all.\n  return entries[0][1] // first one in the list is the most recent version\n}\n","import { determineEmojiSupportLevel } from './determineEmojiSupportLevel'\nimport { requestIdleCallback } from './requestIdleCallback'\n// Check which emojis we know for sure aren't supported, based on Unicode version level\nexport const emojiSupportLevelPromise = new Promise(resolve => (\n  requestIdleCallback(() => (\n    resolve(determineEmojiSupportLevel()) // delay so ideally this can run while IDB is first populating\n  ))\n))\n// determine which emojis containing ZWJ (zero width joiner) characters\n// are supported (rendered as one glyph) rather than unsupported (rendered as two or more glyphs)\nexport const supportedZwjEmojis = new Map()\n\n/* istanbul ignore else */\nif (process.env.NODE_ENV !== 'production') {\n  emojiSupportLevelPromise.then(emojiSupportLevel => {\n    console.log('emoji support level', emojiSupportLevel)\n  })\n}\n","const VARIATION_SELECTOR = '\\ufe0f'\nconst SKINTONE_MODIFIER = '\\ud83c'\nconst ZWJ = '\\u200d'\nconst LIGHT_SKIN_TONE = 0x1F3FB\nconst LIGHT_SKIN_TONE_MODIFIER = 0xdffb\n\n// TODO: this is a naive implementation, we can improve it later\n// It's only used for the skintone picker, so as long as people don't customize with\n// really exotic emoji then it should work fine\nexport function applySkinTone (str, skinTone) {\n  if (skinTone === 0) {\n    return str\n  }\n  const zwjIndex = str.indexOf(ZWJ)\n  if (zwjIndex !== -1) {\n    return str.substring(0, zwjIndex) +\n      String.fromCodePoint(LIGHT_SKIN_TONE + skinTone - 1) +\n      str.substring(zwjIndex)\n  }\n  if (str.endsWith(VARIATION_SELECTOR)) {\n    str = str.substring(0, str.length - 1)\n  }\n  return str + SKINTONE_MODIFIER + String.fromCodePoint(LIGHT_SKIN_TONE_MODIFIER + skinTone - 1)\n}\n","export function halt (event) {\n  event.preventDefault()\n  event.stopPropagation()\n}\n","// Implementation left/right or up/down navigation, circling back when you\n// reach the start/end of the list\nexport function incrementOrDecrement (decrement, val, arr) {\n  val += (decrement ? -1 : 1)\n  if (val < 0) {\n    val = arr.length - 1\n  } else if (val >= arr.length) {\n    val = 0\n  }\n  return val\n}\n","// like lodash's uniqBy but much smaller\nexport function uniqBy (arr, func) {\n  const set = new Set()\n  const res = []\n  for (const item of arr) {\n    const key = func(item)\n    if (!set.has(key)) {\n      set.add(key)\n      res.push(item)\n    }\n  }\n  return res\n}\n","// We don't need all the data on every emoji, and there are specific things we need\n// for the UI, so build a \"view model\" from the emoji object we got from the database\n\nexport function summarizeEmojisForUI (emojis, emojiSupportLevel) {\n  const toSimpleSkinsMap = skins => {\n    const res = {}\n    for (const skin of skins) {\n      // ignore arrays like [1, 2] with multiple skin tones\n      // also ignore variants that are in an unsupported emoji version\n      // (these do exist - variants from a different version than their base emoji)\n      if (typeof skin.tone === 'number' && skin.version <= emojiSupportLevel) {\n        res[skin.tone] = skin.unicode\n      }\n    }\n    return res\n  }\n\n  return emojis.map(({ unicode, skins, shortcodes, url, name, category }) => ({\n    unicode,\n    name,\n    shortcodes,\n    url,\n    category,\n    id: unicode || name,\n    skins: skins && toSimpleSkinsMap(skins),\n    title: (shortcodes || []).join(', ')\n  }))\n}\n","// import rAF from one place so that the bundle size is a bit smaller\nconst rAF = requestAnimationFrame\n\nexport { rAF as requestAnimationFrame }\n","// Svelte action to calculate the width of an element and auto-update\n// using ResizeObserver. If ResizeObserver is unsupported, we just use rAF once\n// and don't bother to update.\n\nimport { requestAnimationFrame } from './requestAnimationFrame'\n\nexport let resizeObserverSupported = typeof ResizeObserver === 'function'\n\n// only used in jest tests\nexport const resetResizeObserverSupported = () => {\n  resizeObserverSupported = typeof ResizeObserver === 'function'\n}\n\nexport function calculateWidth (node, onUpdate) {\n  let resizeObserver\n  if (resizeObserverSupported) {\n    resizeObserver = new ResizeObserver(entries => (\n      onUpdate(entries[0].contentRect.width)\n    ))\n    resizeObserver.observe(node)\n  } else { // just set the width once, don't bother trying to track it\n    requestAnimationFrame(() => (\n      onUpdate(node.getBoundingClientRect().width)\n    ))\n  }\n\n  // cleanup function (called on destroy)\n  return {\n    destroy () {\n      if (resizeObserver) {\n        resizeObserver.disconnect()\n      }\n    }\n  }\n}\n","// get the width of the text inside of a DOM node, via https://stackoverflow.com/a/59525891/680742\nexport function calculateTextWidth (node) {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV === 'test') {\n    return 1\n  } else {\n    const range = document.createRange()\n    range.selectNode(node.firstChild)\n    return range.getBoundingClientRect().width\n  }\n}\n","import { calculateTextWidth } from './calculateTextWidth'\nimport { supportedZwjEmojis } from './emojiSupport'\n\nlet baselineEmojiWidth\n\nexport function checkZwjSupport (zwjEmojisToCheck, baselineEmoji, emojiToDomNode) {\n  performance.mark('checkZwjSupport')\n  for (const emoji of zwjEmojisToCheck) {\n    const domNode = emojiToDomNode(emoji)\n    const emojiWidth = calculateTextWidth(domNode)\n    if (typeof baselineEmojiWidth === 'undefined') { // calculate the baseline emoji width only once\n      baselineEmojiWidth = calculateTextWidth(baselineEmoji)\n    }\n    // On Windows, some supported emoji are ~50% bigger than the baseline emoji, but what we really want to guard\n    // against are the ones that are 2x the size, because those are truly broken (person with red hair = person with\n    // floating red wig, black cat = cat with black square, polar bear = bear with snowflake, etc.)\n    // So here we set the threshold at 1.8 times the size of the baseline emoji.\n    const supported = emojiWidth / 1.8 < baselineEmojiWidth\n    supportedZwjEmojis.set(emoji.unicode, supported)\n    /* istanbul ignore next */\n    if (!supported) {\n      console.log('Filtered unsupported emoji', emoji.unicode, emojiWidth, baselineEmojiWidth)\n    } else if (emojiWidth !== baselineEmojiWidth) {\n      console.log('Allowed borderline emoji', emoji.unicode, emojiWidth, baselineEmojiWidth)\n    }\n  }\n  performance.measure('checkZwjSupport', 'checkZwjSupport')\n}\n","// Measure after style/layout are complete\n// See https://github.com/andrewiggins/afterframe\n\nimport { requestAnimationFrame } from './requestAnimationFrame'\n\nexport const requestPostAnimationFrame = callback => {\n  requestAnimationFrame(() => {\n    setTimeout(callback)\n  })\n}\n","// like lodash's uniq\nimport { uniqBy } from './uniqBy'\n\nexport function uniq (arr) {\n  return uniqBy(arr, _ => _)\n}\n","// Avoid using a bunch of extra memory for throwaway read-only empty objects/arrays\nexport const EMPTY_ARRAY = []\nexport const EMPTY_OBJECT = {}\n\nif (process.env.NODE_ENV !== 'production') {\n  // In dev/test mode, we want to know if we are accidentally mutating these. Throw an error on mutation.\n  Object.freeze(EMPTY_ARRAY)\n  Object.freeze(EMPTY_OBJECT)\n}\n","// Reset scroll top to 0 when emojis change\n// Note we put this in its own function outside Picker.js to avoid Svelte doing an invalidation on the \"setter\" here.\n// At best the invalidation is useless, at worst it can cause infinite loops:\n// https://github.com/nolanlawson/emoji-picker-element/pull/180\n// https://github.com/sveltejs/svelte/issues/6521\n// Also note tabpanelElement can be null if the element is disconnected immediately after connected\nexport function resetScrollTopIfPossible (element) {\n  if (element) {\n    element.scrollTop = 0\n  }\n}\n","<svelte:options tag={null} /><section\n  class=\"picker\"\n  aria-label={i18n.regionLabel}\n  style={pickerStyle}\n  bind:this={rootElement}>\n  <!-- using a spacer div because this allows us to cover up the skintone picker animation -->\n  <div class=\"pad-top\"></div>\n  <div class=\"search-row\">\n    <div class=\"search-wrapper\">\n      <!-- no need for aria-haspopup=listbox, it's the default for role=combobox\n           https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/combobox/aria1.1pattern/listbox-combo.html\n           -->\n      <input\n        id=\"search\"\n        class=\"search\"\n        type=\"search\"\n        role=\"combobox\"\n        enterkeyhint=\"search\"\n        placeholder={i18n.searchLabel}\n        autocapitalize=\"none\"\n        autocomplete=\"off\"\n        spellcheck=\"true\"\n        aria-expanded={!!(searchMode && currentEmojis.length)}\n        aria-controls=\"search-results\"\n        aria-describedby=\"search-description\"\n        aria-autocomplete=\"list\"\n        aria-activedescendant={activeSearchItemId ? `emo-${activeSearchItemId}` : ''}\n        bind:value={rawSearchText}\n        on:keydown={onSearchKeydown}\n      >\n      <label class=\"sr-only\" for=\"search\">{i18n.searchLabel}</label>\n      <span id=\"search-description\" class=\"sr-only\">{i18n.searchDescription}</span>\n    </div>\n    <div class=\"skintone-button-wrapper {skinTonePickerExpandedAfterAnimation ? 'expanded' : ''}\">\n      <button id=\"skintone-button\"\n              class=\"emoji {skinTonePickerExpanded ? 'hide-focus' : ''}\"\n              aria-label={skinToneButtonLabel}\n              title={skinToneButtonLabel}\n              aria-describedby=\"skintone-description\"\n              aria-haspopup=\"listbox\"\n              aria-expanded={skinTonePickerExpanded}\n              aria-controls=\"skintone-list\"\n              on:click={onClickSkinToneButton}>\n        {skinToneButtonText}\n      </button>\n    </div>\n    <span id=\"skintone-description\" class=\"sr-only\">{i18n.skinToneDescription}</span>\n    <div id=\"skintone-list\"\n         class=\"skintone-list {skinTonePickerExpanded ? '' : 'hidden no-animate'}\"\n         style=\"transform:translateY({ skinTonePickerExpanded ? 0 : 'calc(-1 * var(--num-skintones) * var(--total-emoji-size))'})\"\n         role=\"listbox\"\n         aria-label={i18n.skinTonesLabel}\n         aria-activedescendant=\"skintone-{activeSkinTone}\"\n         aria-hidden={!skinTonePickerExpanded}\n         on:focusout={onSkinToneOptionsFocusOut}\n         on:click={onSkinToneOptionsClick}\n         on:keydown={onSkinToneOptionsKeydown}\n         on:keyup={onSkinToneOptionsKeyup}\n         bind:this={skinToneDropdown}>\n      {#each skinTones as skinTone, i (skinTone)}\n        <!-- would use a button here, but iOS Safari misreports relatedTarget in that case, see issue #14 -->\n        <!-- see https://stackoverflow.com/a/42764495/680742 -->\n        <!-- see also https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus -->\n        <div    id=\"skintone-{i}\"\n                class=\"emoji hide-focus {i === activeSkinTone ? 'active' : ''}\"\n                aria-selected={i === activeSkinTone}\n                role=\"option\"\n                title={i18n.skinTones[i]}\n                tabindex=\"-1\"\n                aria-label={i18n.skinTones[i]}>\n          {skinTone}\n        </div>\n      {/each}\n    </div>\n\n  </div>\n  <div class=\"nav\"\n       role=\"tablist\"\n       style=\"grid-template-columns: repeat({groups.length}, 1fr)\"\n       aria-label={i18n.categoriesLabel}\n       on:keydown={onNavKeydown}>\n    {#each groups as group (group.id)}\n      <button role=\"tab\"\n              class=\"nav-button\"\n              aria-controls=\"tab-{group.id}\"\n              aria-label={i18n.categories[group.name]}\n              aria-selected={!searchMode && currentGroup.id === group.id}\n              title={i18n.categories[group.name]}\n              on:click={() => onNavClick(group)}>\n        <div class=\"nav-emoji emoji\">\n          {group.emoji}\n        </div>\n      </button>\n    {/each}\n  </div>\n  <div class=\"indicator-wrapper\">\n    <div class=\"indicator\"\n         style=\"transform: translateX({(isRtl ? -1 : 1) * currentGroupIndex * 100}%)\">\n    </div>\n  </div>\n\n  <div class=\"message {message ? '' : 'gone'}\"\n       role=\"alert\"\n       aria-live=\"polite\">\n    {message}\n  </div>\n\n  <!-- tabindex is so people can scroll up and down with the keyboard -->\n  <div class=\"tabpanel {(!databaseLoaded || message) ? 'gone': ''}\"\n       role={searchMode ? 'region' : 'tabpanel'}\n       aria-label={searchMode ? i18n.searchResultsLabel : i18n.categories[currentGroup.name]}\n       id={searchMode ? '' : `tab-${currentGroup.id}`}\n       tabindex=\"0\"\n       on:click={onEmojiClick}\n       bind:this={tabpanelElement}\n  >\n    <div use:calculateEmojiGridStyle>\n      {#each currentEmojisWithCategories as emojiWithCategory, i (emojiWithCategory.category)}\n        <div\n          id=\"menu-label-{i}\"\n          class=\"category {currentEmojisWithCategories.length === 1 && currentEmojisWithCategories[0].category === '' ? 'gone' : ''}\"\n          aria-hidden=\"true\">\n          <!-- This logic is a bit complicated in order to avoid a flash of the word \"Custom\" while switching\n               from a tabpanel with custom emoji to a regular group. I.e. we don't want it to suddenly flash\n               from \"Custom\" to \"Smileys and emoticons\" when you click the second nav button. The easiest\n               way to repro this is to add an artificial delay to the IndexedDB operations. -->\n          {\n            searchMode ?\n              i18n.searchResultsLabel : (\n                emojiWithCategory.category ?\n                  emojiWithCategory.category : (\n                    currentEmojisWithCategories.length > 1 ?\n                      i18n.categories.custom :\n                      i18n.categories[currentGroup.name]\n                  )\n              )\n          }\n        </div>\n        <div class=\"emoji-menu\"\n             role={searchMode ? 'listbox' : 'menu'}\n             aria-labelledby=\"menu-label-{i}\"\n             id={searchMode ? 'search-results' : ''}>\n          {#each emojiWithCategory.emojis as emoji, i (emoji.id)}\n            <button role={searchMode ? 'option' : 'menuitem'}\n                    aria-selected={searchMode ? i == activeSearchItem : ''}\n                    aria-label={labelWithSkin(emoji, currentSkinTone)}\n                    title={emoji.title}\n                    class=\"emoji {searchMode && i === activeSearchItem ? 'active' : ''}\"\n                    id=\"emo-{emoji.id}\">\n              {#if emoji.unicode}\n                {unicodeWithSkin(emoji, currentSkinTone)}\n              {:else}\n                <img class=\"custom-emoji\" src={emoji.url} alt=\"\" loading=\"lazy\" />\n              {/if}\n            </button>\n          {/each}\n        </div>\n      {/each}\n    </div>\n  </div>\n  <div class=\"favorites emoji-menu {message ? 'gone': ''}\"\n       role=\"menu\"\n       aria-label={i18n.favoritesLabel}\n       style=\"padding-inline-end: {scrollbarWidth}px\"\n       on:click={onEmojiClick}>\n    <!-- The reason the emoji logic below is largely duplicated is because it turns out we get a smaller\n         bundle size from just repeating it twice, rather than creating a second Svelte component. -->\n    {#each currentFavorites as emoji, i (emoji.id)}\n      <button role=\"menuitem\"\n              aria-label={labelWithSkin(emoji, currentSkinTone)}\n              title={emoji.title}\n              class=\"emoji\"\n              id=\"fav-{emoji.id}\">\n        {#if emoji.unicode}\n          {unicodeWithSkin(emoji, currentSkinTone)}\n        {:else}\n          <img class=\"custom-emoji\" src={emoji.url} alt=\"\" loading=\"lazy\" />\n        {/if}\n      </button>\n    {/each}\n  </div>\n  <!-- This serves as a baseline emoji for measuring against and determining emoji support -->\n  <button aria-hidden=\"true\" tabindex=\"-1\" class=\"abs-pos hidden emoji\" bind:this={baselineEmoji}>😀</button>\n</section>\n<script>\n  /* eslint-disable prefer-const,no-labels,no-inner-declarations */\n\n  import { groups as defaultGroups, customGroup } from '../../groups'\n  import { MIN_SEARCH_TEXT_LENGTH, NUM_SKIN_TONES } from '../../../shared/constants'\n  import { requestIdleCallback } from '../../utils/requestIdleCallback'\n  import { hasZwj } from '../../utils/hasZwj'\n  import { emojiSupportLevelPromise, supportedZwjEmojis } from '../../utils/emojiSupport'\n  import { applySkinTone } from '../../utils/applySkinTone'\n  import { halt } from '../../utils/halt'\n  import { incrementOrDecrement } from '../../utils/incrementOrDecrement'\n  import {\n    DEFAULT_NUM_COLUMNS,\n    FONT_FAMILY,\n    MOST_COMMONLY_USED_EMOJI,\n    TIMEOUT_BEFORE_LOADING_MESSAGE\n  } from '../../constants'\n  import { uniqBy } from '../../../shared/uniqBy'\n  import { summarizeEmojisForUI } from '../../utils/summarizeEmojisForUI'\n  import * as widthCalculator from '../../utils/widthCalculator'\n  import { checkZwjSupport } from '../../utils/checkZwjSupport'\n  import { requestPostAnimationFrame } from '../../utils/requestPostAnimationFrame'\n  import { tick } from 'svelte'\n  import { requestAnimationFrame } from '../../utils/requestAnimationFrame'\n  import { uniq } from '../../../shared/uniq'\n  import { EMPTY_ARRAY } from '../../../shared/lang.js'\n  import { resetScrollTopIfPossible } from '../../utils/resetScrollTopIfPossible.js'\n\n  // public\n  export let skinToneEmoji\n  export let i18n\n  export let database\n  export let customEmoji\n  export let customCategorySorting\n\n  // private\n  let initialLoad = true\n  let currentEmojis = EMPTY_ARRAY\n  let currentEmojisWithCategories = EMPTY_ARRAY // eslint-disable-line no-unused-vars\n  let rawSearchText = ''\n  let searchText = ''\n  let rootElement\n  let baselineEmoji\n  let tabpanelElement\n  let searchMode = false // eslint-disable-line no-unused-vars\n  let activeSearchItem = -1\n  let message // eslint-disable-line no-unused-vars\n  let skinTonePickerExpanded = false\n  let skinTonePickerExpandedAfterAnimation = false // eslint-disable-line no-unused-vars\n  let skinToneDropdown\n  let currentSkinTone = 0\n  let activeSkinTone = 0\n  let skinToneButtonText // eslint-disable-line no-unused-vars\n  let pickerStyle // eslint-disable-line no-unused-vars\n  let skinToneButtonLabel = '' // eslint-disable-line no-unused-vars\n  let skinTones = EMPTY_ARRAY\n  let currentFavorites = EMPTY_ARRAY // eslint-disable-line no-unused-vars\n  let defaultFavoriteEmojis\n  let numColumns = DEFAULT_NUM_COLUMNS\n  let isRtl = false\n  let scrollbarWidth = 0 // eslint-disable-line no-unused-vars\n  let currentGroupIndex = 0\n  let groups = defaultGroups\n  let currentGroup\n  let databaseLoaded = false // eslint-disable-line no-unused-vars\n  let activeSearchItemId // eslint-disable-line no-unused-vars\n\n  //\n  // Utils/helpers\n  //\n\n  const focus = id => {\n    rootElement.getRootNode().getElementById(id).focus()\n  }\n\n  // fire a custom event that crosses the shadow boundary\n  const fireEvent = (name, detail) => {\n    rootElement.dispatchEvent(new CustomEvent(name, {\n      detail,\n      bubbles: true,\n      composed: true\n    }))\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  const unicodeWithSkin = (emoji, currentSkinTone) => (\n    (currentSkinTone && emoji.skins && emoji.skins[currentSkinTone]) || emoji.unicode\n  )\n\n  // eslint-disable-next-line no-unused-vars\n  const labelWithSkin = (emoji, currentSkinTone) => {\n    console.log('labelWithSkin')\n    return uniq([(emoji.name || unicodeWithSkin(emoji, currentSkinTone)), ...(emoji.shortcodes || EMPTY_ARRAY)]).join(', ')\n  }\n\n  // Detect a skintone option button\n  const isSkinToneOption = element => /^skintone-/.test(element.id)\n\n  //\n  // Determine the emoji support level (in requestIdleCallback)\n  //\n\n  emojiSupportLevelPromise.then(level => {\n    // Can't actually test emoji support in Jest/JSDom, emoji never render in color in Cairo\n    /* istanbul ignore next */\n    if (!level) {\n      message = i18n.emojiUnsupportedMessage\n    }\n  })\n\n  //\n  // Set or update the database object\n  //\n\n  $: {\n    // show a Loading message if it takes a long time, or show an error if there's a network/IDB error\n    async function handleDatabaseLoading () {\n      let showingLoadingMessage = false\n      const timeoutHandle = setTimeout(() => {\n        showingLoadingMessage = true\n        message = i18n.loadingMessage\n      }, TIMEOUT_BEFORE_LOADING_MESSAGE)\n      try {\n        await database.ready()\n        databaseLoaded = true // eslint-disable-line no-unused-vars\n      } catch (err) {\n        console.error(err)\n        message = i18n.networkErrorMessage\n      } finally {\n        clearTimeout(timeoutHandle)\n        if (showingLoadingMessage) { // Seems safer than checking the i18n string, which may change\n          showingLoadingMessage = false\n          message = '' // eslint-disable-line no-unused-vars\n        }\n      }\n    }\n    if (database) {\n      /* no await */ handleDatabaseLoading()\n    }\n  }\n\n  //\n  // Global styles for the entire picker\n  //\n\n  /* eslint-disable no-unused-vars */\n  $: pickerStyle = `\n  --font-family: ${FONT_FAMILY};\n  --num-groups: ${groups.length};\n  --indicator-opacity: ${searchMode ? 0 : 1};\n  --num-skintones: ${NUM_SKIN_TONES};`\n  /* eslint-enable no-unused-vars */\n\n  //\n  // Set or update the customEmoji\n  //\n\n  $: {\n    if (customEmoji && database) {\n      console.log('updating custom emoji')\n      database.customEmoji = customEmoji\n    }\n  }\n\n  $: {\n    if (customEmoji && customEmoji.length) {\n      groups = [customGroup, ...defaultGroups]\n    } else if (groups !== defaultGroups) {\n      if (currentGroupIndex) {\n        // If the current group is anything other than \"custom\" (which is first), decrement.\n        // This fixes the odd case where you set customEmoji, then pick a category, then unset customEmoji\n        currentGroupIndex--\n      }\n      groups = defaultGroups\n    }\n  }\n\n  //\n  // Set or update the preferred skin tone\n  //\n\n  $: {\n    async function updatePreferredSkinTone () {\n      if (databaseLoaded) {\n        currentSkinTone = await database.getPreferredSkinTone()\n      }\n    }\n    /* no await */ updatePreferredSkinTone()\n  }\n\n  $: skinTones = Array(NUM_SKIN_TONES).fill().map((_, i) => applySkinTone(skinToneEmoji, i))\n  /* eslint-disable no-unused-vars */\n  $: skinToneButtonText = skinTones[currentSkinTone]\n  $: skinToneButtonLabel = i18n.skinToneLabel.replace('{skinTone}', i18n.skinTones[currentSkinTone])\n  /* eslint-enable no-unused-vars */\n\n  //\n  // Set or update the favorites emojis\n  //\n\n  $: {\n    async function updateDefaultFavoriteEmojis () {\n      defaultFavoriteEmojis = (await Promise.all(MOST_COMMONLY_USED_EMOJI.map(unicode => (\n        database.getEmojiByUnicodeOrName(unicode)\n      )))).filter(Boolean) // filter because in Jest tests we don't have all the emoji in the DB\n    }\n    if (databaseLoaded) {\n      /* no await */ updateDefaultFavoriteEmojis()\n    }\n  }\n\n  $: {\n    async function updateFavorites () {\n      console.log('updateFavorites')\n      const dbFavorites = await database.getTopFavoriteEmoji(numColumns)\n      const favorites = await summarizeEmojis(uniqBy([\n        ...dbFavorites,\n        ...defaultFavoriteEmojis\n      ], _ => (_.unicode || _.name)).slice(0, numColumns))\n      currentFavorites = favorites\n    }\n\n    if (databaseLoaded && defaultFavoriteEmojis) {\n      /* no await */ updateFavorites()\n    }\n  }\n\n  //\n  // Calculate the width of the emoji grid. This serves two purposes:\n  // 1) Re-calculate the --num-columns var because it may have changed\n  // 2) Re-calculate the scrollbar width because it may have changed\n  //   (i.e. because the number of items changed)\n  // 3) Re-calculate whether we're in RTL mode or not.\n  //\n  // The benefit of doing this in one place is to align with rAF/ResizeObserver\n  // and do all the calculations in one go. RTL vs LTR is not strictly width-related,\n  // but since we're already reading the style here, and since it's already aligned with\n  // the rAF loop, this is the most appropriate place to do it perf-wise.\n  //\n\n  // eslint-disable-next-line no-unused-vars\n  function calculateEmojiGridStyle (node) {\n    return widthCalculator.calculateWidth(node, width => {\n      /* istanbul ignore next */\n      if (process.env.NODE_ENV !== 'test') { // jsdom throws errors for this kind of fancy stuff\n        // read all the style/layout calculations we need to make\n        const style = getComputedStyle(rootElement)\n        const newNumColumns = parseInt(style.getPropertyValue('--num-columns'), 10)\n        const newIsRtl = style.getPropertyValue('direction') === 'rtl'\n        const parentWidth = node.parentElement.getBoundingClientRect().width\n        const newScrollbarWidth = parentWidth - width\n\n        // write to Svelte variables\n        numColumns = newNumColumns\n        scrollbarWidth = newScrollbarWidth // eslint-disable-line no-unused-vars\n        isRtl = newIsRtl // eslint-disable-line no-unused-vars\n      }\n    })\n  }\n\n  //\n  // Update the current group based on the currentGroupIndex\n  //\n\n  $: currentGroup = groups[currentGroupIndex]\n\n  //\n  // Set or update the currentEmojis. Check for invalid ZWJ renderings\n  // (i.e. double emoji).\n  //\n\n  $: {\n    async function updateEmojis () {\n      console.log('updateEmojis')\n      if (!databaseLoaded) {\n        currentEmojis = EMPTY_ARRAY\n        searchMode = false\n      } else if (searchText.length >= MIN_SEARCH_TEXT_LENGTH) {\n        const currentSearchText = searchText\n        const newEmojis = await getEmojisBySearchQuery(currentSearchText)\n        if (currentSearchText === searchText) { // if the situation changes asynchronously, do not update\n          currentEmojis = newEmojis\n          searchMode = true\n        }\n      } else if (currentGroup) {\n        const currentGroupId = currentGroup.id\n        const newEmojis = await getEmojisByGroup(currentGroupId)\n        if (currentGroupId === currentGroup.id) { // if the situation changes asynchronously, do not update\n          currentEmojis = newEmojis\n          searchMode = false\n        }\n      }\n    }\n    /* no await */ updateEmojis()\n  }\n\n  // Some emojis have their ligatures rendered as two or more consecutive emojis\n  // We want to treat these the same as unsupported emojis, so we compare their\n  // widths against the baseline widths and remove them as necessary\n  $: {\n    const zwjEmojisToCheck = currentEmojis\n      .filter(emoji => emoji.unicode) // filter custom emoji\n      .filter(emoji => hasZwj(emoji) && !supportedZwjEmojis.has(emoji.unicode))\n    if (zwjEmojisToCheck.length) {\n      // render now, check their length later\n      requestAnimationFrame(() => checkZwjSupportAndUpdate(zwjEmojisToCheck))\n    } else {\n      currentEmojis = currentEmojis.filter(isZwjSupported)\n      requestAnimationFrame(() => resetScrollTopIfPossible(tabpanelElement))\n    }\n  }\n\n  function checkZwjSupportAndUpdate (zwjEmojisToCheck) {\n    const rootNode = rootElement.getRootNode()\n    const emojiToDomNode = emoji => rootNode.getElementById(`emo-${emoji.id}`)\n    checkZwjSupport(zwjEmojisToCheck, baselineEmoji, emojiToDomNode)\n    // force update\n    currentEmojis = currentEmojis // eslint-disable-line no-self-assign\n  }\n\n  function isZwjSupported (emoji) {\n    return !emoji.unicode || !hasZwj(emoji) || supportedZwjEmojis.get(emoji.unicode)\n  }\n\n  async function filterEmojisByVersion (emojis) {\n    const emojiSupportLevel = await emojiSupportLevelPromise\n    // !version corresponds to custom emoji\n    return emojis.filter(({ version }) => !version || version <= emojiSupportLevel)\n  }\n\n  async function summarizeEmojis (emojis) {\n    return summarizeEmojisForUI(emojis, await emojiSupportLevelPromise)\n  }\n\n  async function getEmojisByGroup (group) {\n    console.log('getEmojiByGroup', group)\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && typeof group === 'undefined') {\n      throw new Error('group is undefined', group)\n    }\n    // -1 is custom emoji\n    const emoji = group === -1 ? customEmoji : await database.getEmojiByGroup(group)\n    return summarizeEmojis(await filterEmojisByVersion(emoji))\n  }\n\n  async function getEmojisBySearchQuery (query) {\n    return summarizeEmojis(await filterEmojisByVersion(await database.getEmojiBySearchQuery(query)))\n  }\n\n  $: {\n    // consider initialLoad to be complete when the first tabpanel and favorites are rendered\n    /* istanbul ignore next */\n    if (process.env.NODE_ENV !== 'production' || process.env.PERF) {\n      if (currentEmojis.length && currentFavorites.length && initialLoad) {\n        initialLoad = false\n        requestPostAnimationFrame(() => performance.measure('initialLoad', 'initialLoad'))\n      }\n    }\n  }\n\n  //\n  // Derive currentEmojisWithCategories from currentEmojis. This is always done even if there\n  // are no categories, because it's just easier to code the HTML this way.\n  //\n\n  $: {\n    function calculateCurrentEmojisWithCategories () {\n      if (searchMode) {\n        return [\n          {\n            category: '',\n            emojis: currentEmojis\n          }\n        ]\n      }\n      const categoriesToEmoji = new Map()\n      for (const emoji of currentEmojis) {\n        const category = emoji.category || ''\n        let emojis = categoriesToEmoji.get(category)\n        if (!emojis) {\n          emojis = []\n          categoriesToEmoji.set(category, emojis)\n        }\n        emojis.push(emoji)\n      }\n      return [...categoriesToEmoji.entries()]\n        .map(([category, emojis]) => ({ category, emojis }))\n        .sort((a, b) => customCategorySorting(a.category, b.category))\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    currentEmojisWithCategories = calculateCurrentEmojisWithCategories()\n  }\n\n  //\n  // Handle active search item (i.e. pressing up or down while searching)\n  //\n\n  /* eslint-disable no-unused-vars */\n  $: activeSearchItemId = activeSearchItem !== -1 && currentEmojis[activeSearchItem].id\n  /* eslint-enable no-unused-vars */\n\n  //\n  // Handle user input on the search input\n  //\n\n  $: {\n    requestIdleCallback(() => {\n      searchText = (rawSearchText || '').trim() // defer to avoid input delays, plus we can trim here\n      activeSearchItem = -1\n    })\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  function onSearchKeydown (event) {\n    if (!searchMode || !currentEmojis.length) {\n      return\n    }\n\n    const goToNextOrPrevious = (previous) => {\n      halt(event)\n      activeSearchItem = incrementOrDecrement(previous, activeSearchItem, currentEmojis)\n    }\n\n    switch (event.key) {\n      case 'ArrowDown':\n        return goToNextOrPrevious(false)\n      case 'ArrowUp':\n        return goToNextOrPrevious(true)\n      case 'Enter':\n        if (activeSearchItem !== -1) {\n          halt(event)\n          return clickEmoji(currentEmojis[activeSearchItem].id)\n        } else if (currentEmojis.length) {\n          activeSearchItem = 0\n        }\n    }\n  }\n\n  //\n  // Handle user input on nav\n  //\n\n  // eslint-disable-next-line no-unused-vars\n  function onNavClick (group) {\n    rawSearchText = ''\n    searchText = ''\n    activeSearchItem = -1\n    currentGroupIndex = groups.findIndex(_ => _.id === group.id)\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  function onNavKeydown (event) {\n    const { target, key } = event\n\n    const doFocus = el => {\n      if (el) {\n        halt(event)\n        el.focus()\n      }\n    }\n\n    switch (key) {\n      case 'ArrowLeft':\n        return doFocus(target.previousSibling)\n      case 'ArrowRight':\n        return doFocus(target.nextSibling)\n      case 'Home':\n        return doFocus(target.parentElement.firstChild)\n      case 'End':\n        return doFocus(target.parentElement.lastChild)\n    }\n  }\n\n  //\n  // Handle user input on an emoji\n  //\n\n  async function clickEmoji (unicodeOrName) {\n    const emoji = await database.getEmojiByUnicodeOrName(unicodeOrName)\n    const emojiSummary = [...currentEmojis, ...currentFavorites]\n      .find(_ => (_.id === unicodeOrName))\n    const skinTonedUnicode = emojiSummary.unicode && unicodeWithSkin(emojiSummary, currentSkinTone)\n    await database.incrementFavoriteEmojiCount(unicodeOrName)\n    fireEvent('emoji-click', {\n      emoji,\n      skinTone: currentSkinTone,\n      ...(skinTonedUnicode && { unicode: skinTonedUnicode }),\n      ...(emojiSummary.name && { name: emojiSummary.name })\n    })\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  async function onEmojiClick (event) {\n    const { target } = event\n    if (!target.classList.contains('emoji')) {\n      return\n    }\n    halt(event)\n    const id = target.id.substring(4) // replace 'emo-' or 'fav-' prefix\n\n    /* no await */ clickEmoji(id)\n  }\n\n  //\n  // Handle user input on the skintone picker\n  //\n\n  // eslint-disable-next-line no-unused-vars\n  async function onSkinToneOptionsClick (event) {\n    const { target } = event\n    if (!isSkinToneOption(target)) {\n      return\n    }\n    halt(event)\n    const skinTone = parseInt(target.id.slice(9), 10) // remove 'skintone-' prefix\n    currentSkinTone = skinTone\n    skinTonePickerExpanded = false\n    focus('skintone-button')\n    fireEvent('skin-tone-change', { skinTone })\n    /* no await */ database.setPreferredSkinTone(skinTone)\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  async function onClickSkinToneButton (event) {\n    skinTonePickerExpanded = !skinTonePickerExpanded\n    activeSkinTone = currentSkinTone\n    if (skinTonePickerExpanded) {\n      halt(event)\n      requestAnimationFrame(() => focus(`skintone-${activeSkinTone}`))\n    }\n  }\n\n  // To make the animation nicer, change the z-index of the skintone picker button\n  // *after* the animation has played. This makes it appear that the picker box\n  // is expanding \"below\" the button\n  $: {\n    if (skinTonePickerExpanded) {\n      skinToneDropdown.addEventListener('transitionend', () => {\n        skinTonePickerExpandedAfterAnimation = true // eslint-disable-line no-unused-vars\n      }, { once: true })\n    } else {\n      skinTonePickerExpandedAfterAnimation = false // eslint-disable-line no-unused-vars\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  function onSkinToneOptionsKeydown (event) {\n    if (!skinTonePickerExpanded) {\n      return\n    }\n\n    const changeActiveSkinTone = async nextSkinTone => {\n      halt(event)\n      activeSkinTone = nextSkinTone\n      await tick()\n      focus(`skintone-${activeSkinTone}`)\n    }\n\n    switch (event.key) {\n      case 'ArrowUp':\n        return changeActiveSkinTone(incrementOrDecrement(true, activeSkinTone, skinTones))\n      case 'ArrowDown':\n        return changeActiveSkinTone(incrementOrDecrement(false, activeSkinTone, skinTones))\n      case 'Home':\n        return changeActiveSkinTone(0)\n      case 'End':\n        return changeActiveSkinTone(skinTones.length - 1)\n      case 'Enter':\n        // enter on keydown, space on keyup. this is just how browsers work for buttons\n        // https://lists.w3.org/Archives/Public/w3c-wai-ig/2019JanMar/0086.html\n        return onSkinToneOptionsClick(event)\n      case 'Escape':\n        halt(event)\n        skinTonePickerExpanded = false\n        return focus('skintone-button')\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  function onSkinToneOptionsKeyup (event) {\n    if (!skinTonePickerExpanded) {\n      return\n    }\n    switch (event.key) {\n      case ' ':\n        // enter on keydown, space on keyup. this is just how browsers work for buttons\n        // https://lists.w3.org/Archives/Public/w3c-wai-ig/2019JanMar/0086.html\n        return onSkinToneOptionsClick(event)\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  async function onSkinToneOptionsFocusOut (event) {\n    // On blur outside of the skintone options, collapse the skintone picker.\n    // Except if focus is just moving to another skintone option, e.g. pressing up/down to change focus\n    const { relatedTarget } = event\n    if (!relatedTarget || !isSkinToneOption(relatedTarget)) {\n      skinTonePickerExpanded = false\n    }\n  }\n\n</script>","export const DB_VERSION_CURRENT = 1\nexport const DB_VERSION_INITIAL = 1\nexport const STORE_EMOJI = 'emoji'\nexport const STORE_KEYVALUE = 'keyvalue'\nexport const STORE_FAVORITES = 'favorites'\nexport const FIELD_TOKENS = 'tokens'\nexport const INDEX_TOKENS = 'tokens'\nexport const FIELD_UNICODE = 'unicode'\nexport const INDEX_COUNT = 'count'\nexport const FIELD_GROUP = 'group'\nexport const FIELD_ORDER = 'order'\nexport const INDEX_GROUP_AND_ORDER = 'group-order'\nexport const KEY_ETAG = 'eTag'\nexport const KEY_URL = 'url'\nexport const KEY_PREFERRED_SKINTONE = 'skinTone'\nexport const MODE_READONLY = 'readonly'\nexport const MODE_READWRITE = 'readwrite'\nexport const INDEX_SKIN_UNICODE = 'skinUnicodes'\nexport const FIELD_SKIN_UNICODE = 'skinUnicodes'\n\nexport const DEFAULT_DATA_SOURCE = 'https://cdn.jsdelivr.net/npm/emoji-picker-element-data@^1/en/emojibase/data.json'\nexport const DEFAULT_LOCALE = 'en'\n","export default {\n  categoriesLabel: 'Categories',\n  emojiUnsupportedMessage: 'Your browser does not support color emoji.',\n  favoritesLabel: 'Favorites',\n  loadingMessage: 'Loading…',\n  networkErrorMessage: 'Could not load emoji.',\n  regionLabel: 'Emoji picker',\n  searchDescription: 'When search results are available, press up or down to select and enter to choose.',\n  searchLabel: 'Search',\n  searchResultsLabel: 'Search results',\n  skinToneDescription: 'When expanded, press up or down to select and enter to choose.',\n  skinToneLabel: 'Choose a skin tone (currently {skinTone})',\n  skinTonesLabel: 'Skin tones',\n  skinTones: [\n    'Default',\n    'Light',\n    'Medium-Light',\n    'Medium',\n    'Medium-Dark',\n    'Dark'\n  ],\n  categories: {\n    custom: 'Custom',\n    'smileys-emotion': 'Smileys and emoticons',\n    'people-body': 'People and body',\n    'animals-nature': 'Animals and nature',\n    'food-drink': 'Food and drink',\n    'travel-places': 'Travel and places',\n    activities: 'Activities',\n    objects: 'Objects',\n    symbols: 'Symbols',\n    flags: 'Flags'\n  }\n}\n","import SveltePicker from './components/Picker/Picker.svelte'\nimport { DEFAULT_DATA_SOURCE, DEFAULT_LOCALE } from '../database/constants'\nimport { DEFAULT_CATEGORY_SORTING, DEFAULT_SKIN_TONE_EMOJI } from './constants'\nimport enI18n from './i18n/en.js'\nimport Database from './ImportedDatabase'\n\nconst PROPS = [\n  'customEmoji',\n  'customCategorySorting',\n  'database',\n  'dataSource',\n  'i18n',\n  'locale',\n  'skinToneEmoji'\n]\n\nexport default class PickerElement extends HTMLElement {\n  constructor (props) {\n    performance.mark('initialLoad')\n    super()\n    this.attachShadow({ mode: 'open' })\n    const style = document.createElement('style')\n    style.textContent = process.env.STYLES\n    this.shadowRoot.appendChild(style)\n    this._ctx = {\n      // Set defaults\n      locale: DEFAULT_LOCALE,\n      dataSource: DEFAULT_DATA_SOURCE,\n      skinToneEmoji: DEFAULT_SKIN_TONE_EMOJI,\n      customCategorySorting: DEFAULT_CATEGORY_SORTING,\n      customEmoji: null,\n      i18n: enI18n,\n      ...props\n    }\n    // Handle properties set before the element was upgraded\n    for (const prop of PROPS) {\n      if (prop !== 'database' && Object.prototype.hasOwnProperty.call(this, prop)) {\n        this._ctx[prop] = this[prop]\n        delete this[prop]\n      }\n    }\n    this._dbFlush() // wait for a flush before creating the db, in case the user calls e.g. a setter or setAttribute\n  }\n\n  connectedCallback () {\n    this._cmp = new SveltePicker({\n      target: this.shadowRoot,\n      props: this._ctx\n    })\n  }\n\n  disconnectedCallback () {\n    this._cmp.$destroy()\n    this._cmp = undefined\n\n    const { database } = this._ctx\n    if (database) {\n      database.close()\n        // only happens if the database failed to load in the first place, so we don't care)\n        .catch(err => console.error(err))\n    }\n  }\n\n  static get observedAttributes () {\n    return ['locale', 'data-source', 'skin-tone-emoji'] // complex objects aren't supported, also use kebab-case\n  }\n\n  attributeChangedCallback (attrName, oldValue, newValue) {\n    // convert from kebab-case to camelcase\n    // see https://github.com/sveltejs/svelte/issues/3852#issuecomment-665037015\n    this._set(\n      attrName.replace(/-([a-z])/g, (_, up) => up.toUpperCase()),\n      newValue\n    )\n  }\n\n  _set (prop, newValue) {\n    this._ctx[prop] = newValue\n    if (this._cmp) {\n      this._cmp.$set({ [prop]: newValue })\n    }\n    if (['locale', 'dataSource'].includes(prop)) {\n      this._dbFlush()\n    }\n  }\n\n  _dbCreate () {\n    const { locale, dataSource, database } = this._ctx\n    // only create a new database if we really need to\n    if (!database || database.locale !== locale || database.dataSource !== dataSource) {\n      this._set('database', new Database({ locale, dataSource }))\n    }\n  }\n\n  // Update the Database in one microtask if the locale/dataSource change. We do one microtask\n  // so we don't create two Databases if e.g. both the locale and the dataSource change\n  _dbFlush () {\n    Promise.resolve().then(() => (\n      this._dbCreate()\n    ))\n  }\n}\n\nconst definitions = {}\n\nfor (const prop of PROPS) {\n  definitions[prop] = {\n    get () {\n      if (prop === 'database') {\n        // in rare cases, the microtask may not be flushed yet, so we need to instantiate the DB\n        // now if the user is asking for it\n        this._dbCreate()\n      }\n      return this._ctx[prop]\n    },\n    set (val) {\n      if (prop === 'database') {\n        throw new Error('database is read-only')\n      }\n      this._set(prop, val)\n    }\n  }\n}\n\nObject.defineProperties(PickerElement.prototype, definitions)\n\n/* istanbul ignore else */\nif (!customElements.get('emoji-picker')) { // if already defined, do nothing (e.g. same script imported twice)\n  customElements.define('emoji-picker', PickerElement)\n}\n"],"names":["requestIdleCallback","requestAnimationFrame","groups","defaultGroups","widthCalculator.calculateWidth","SveltePicker"],"mappings":"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"}