<?php

/**
 * @file
 * Contains install and update functions for URL Embed.
 */

use Drupal\embed\Entity\EmbedButton;
use Drupal\Core\Utility\UpdateException;

/**
 * Implements hook_requirements().
 *
 * Checks that the necessary libraries have been installed.
 */
function url_embed_requirements($phase) {
  $requirements = [];

  if ($phase === 'install') {
    if (!class_exists('\Embed\Embed')) {
      $requirements['url_embed_library'] = [
        'description' => t("URL Embed requires the Embed/Embed library."),
        'severity' => REQUIREMENT_ERROR,
      ];
    }
  }
  elseif ($phase == 'runtime') {
    $requirements['url_embed']['title'] = t('Url Embed: Facebook/Instagram App');
    $config = \Drupal::service('config.factory')->get('url_embed.settings');
    if (empty($config->get('facebook_app_id')) || empty($config->get('facebook_app_secret'))) {
      $requirements['url_embed']['value'] = t('Missing Facebook app credentials.');
      $requirements['url_embed']['description'] = t('In order to embed Facebook and Instagram posts you must create a <a href="@facebook_url">live facebook app with oEmbed enabled</a> and add the app ID and Secret to the <a href="@settings_url">Url Embed settings page</a>.',
        [
          '@facebook_url' => 'https://developers.facebook.com/docs/plugins/oembed',
          '@settings_url' => '/admin/config/media/url_embed',
        ]);
      $requirements['url_embed']['severity'] = REQUIREMENT_WARNING;
    }
    else {
      $access_token = url_embed_debug_facebook_access_token($config->get('facebook_app_id') . '|' . $config->get('facebook_app_secret'));
      $is_valid = !empty($access_token['is_valid']);
      $requirements['url_embed']['value'] = $is_valid ? t('Active') : t('Invalid Facebook app credentials provided.');
      $requirements['url_embed']['severity'] = $is_valid ? REQUIREMENT_INFO : REQUIREMENT_ERROR;
      if (!$is_valid) {
        $requirements['url_embed']['description'] = t('Check that you have entered your app credentials correctly and that it is live. <a href="@settings_url">Edit settings</a>', ['@settings_url' => '/admin/config/media/url_embed']);
      }
    }
  }

  return $requirements;
}

/**
 * Convert URL embed buttons to embed buttons.
 *
 * @todo Can we reuse the existing UUID and save before deleting the old button?
 */
function url_embed_update_8001() {
  $config_factory = \Drupal::configFactory();

  foreach ($config_factory->listAll('url_embed.url_button.') as $config_name) {
    $old_embed_button = $config_factory->getEditable($config_name);
    $values = $old_embed_button->getRawData();

    if (EmbedButton::load($values['id'])) {
      throw new UpdateException('Unable to convert url_embed.url_button.' . $values['id'] . ' to embed.button.' . $values['id'] . ' since the latter already exists.');
    }

    // Move some data around.
    $values['type_id'] = 'url';
    $values['icon_uuid'] = $values['button_icon_uuid'];
    unset($values['button_icon_uuid']);

    // Save the new embed button and delete the old one.
    $embed_button = EmbedButton::create($values);
    $embed_button->save();
    $old_embed_button->delete();
  }
}

/**
 * Sets a default cache expiration time setting for URL embed.
 */
function url_embed_update_8002() {
  $config_factory = \Drupal::configFactory();
  $config = $config_factory->getEditable('url_embed.settings');
  if ($config->isNew()) {
    $config->set('cache_expiration', 3600);
    $config->save();
  }
}
